// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config17_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        conv1_input_TDATA,
        conv1_input_TVALID,
        conv1_input_TREADY,
        layer17_out_din,
        layer17_out_num_data_valid,
        layer17_out_fifo_cap,
        layer17_out_full_n,
        layer17_out_write
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [47:0] conv1_input_TDATA;
input   conv1_input_TVALID;
output   conv1_input_TREADY;
output  [47:0] layer17_out_din;
input  [11:0] layer17_out_num_data_valid;
input  [11:0] layer17_out_fifo_cap;
input   layer17_out_full_n;
output   layer17_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg[47:0] layer17_out_din;
reg layer17_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_done;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_idle;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_ready;
wire   [47:0] grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_din;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_write;
wire    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_conv1_input_TREADY;
wire    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start;
wire    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done;
wire    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_idle;
wire    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_ready;
wire   [47:0] grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_din;
wire    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_write;
reg    grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state6;
reg   [5:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    regslice_both_conv1_input_U_apdone_blk;
wire   [47:0] conv1_input_TDATA_int_regslice;
wire    conv1_input_TVALID_int_regslice;
reg    conv1_input_TREADY_int_regslice;
wire    regslice_both_conv1_input_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 6'd1;
#0 grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg = 1'b0;
#0 grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg = 1'b0;
end

myproject_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start),
    .ap_done(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_done),
    .ap_idle(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_idle),
    .ap_ready(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_ready),
    .layer17_out_din(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_din),
    .layer17_out_num_data_valid(12'd0),
    .layer17_out_fifo_cap(12'd0),
    .layer17_out_full_n(layer17_out_full_n),
    .layer17_out_write(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_write),
    .conv1_input_TVALID(conv1_input_TVALID_int_regslice),
    .conv1_input_TDATA(conv1_input_TDATA_int_regslice),
    .conv1_input_TREADY(grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_conv1_input_TREADY)
);

myproject_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start),
    .ap_done(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done),
    .ap_idle(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_idle),
    .ap_ready(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_ready),
    .layer17_out_din(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_din),
    .layer17_out_num_data_valid(12'd0),
    .layer17_out_fifo_cap(12'd0),
    .layer17_out_full_n(layer17_out_full_n),
    .layer17_out_write(grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_write)
);

myproject_regslice_both #(
    .DataWidth( 48 ))
regslice_both_conv1_input_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(conv1_input_TDATA),
    .vld_in(conv1_input_TVALID),
    .ack_in(regslice_both_conv1_input_U_ack_in),
    .data_out(conv1_input_TDATA_int_regslice),
    .vld_out(conv1_input_TVALID_int_regslice),
    .ack_out(conv1_input_TREADY_int_regslice),
    .apdone_blk(regslice_both_conv1_input_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg <= 1'b1;
        end else if ((grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_ready == 1'b1)) begin
            grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg <= 1'b1;
        end else if ((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_ready == 1'b1)) begin
            grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if (((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        conv1_input_TREADY_int_regslice = grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_conv1_input_TREADY;
    end else begin
        conv1_input_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer17_out_din = grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_din;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        layer17_out_din = grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_din;
    end else begin
        layer17_out_din = grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_din;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        layer17_out_write = grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_layer17_out_write;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        layer17_out_write = grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_layer17_out_write;
    end else begin
        layer17_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign conv1_input_TREADY = regslice_both_conv1_input_U_ack_in;

assign grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start = grp_zeropad2d_cl_array_array_ap_fixed_16_6_5_3_0_3u_config17_Pipeline_PadMain_fu_26_ap_start_reg;

assign grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start = grp_zeropad2d_cl_array_array_ap_fixed_3u_config17_Pipeline_PadBottomWidth_fu_34_ap_start_reg;

assign start_out = real_start;

endmodule //myproject_zeropad2d_cl_array_ap_fixed_3u_array_ap_fixed_16_6_5_3_0_3u_config17_s
