-- ==============================================================
-- Generated by Vitis HLS v2024.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    layer15_out_dout : IN STD_LOGIC_VECTOR (159 downto 0);
    layer15_out_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    layer15_out_empty_n : IN STD_LOGIC;
    layer15_out_read : OUT STD_LOGIC;
    layer16_out_TDATA : OUT STD_LOGIC_VECTOR (159 downto 0);
    layer16_out_TVALID : OUT STD_LOGIC;
    layer16_out_TREADY : IN STD_LOGIC );
end;


architecture behav of myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_6F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101111";
    constant ap_const_lv32_70 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_8F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010001111";
    constant ap_const_lv32_90 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010010000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv10_1FF : STD_LOGIC_VECTOR (9 downto 0) := "0111111111";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal exp_table_q0 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_q1 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address2 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q2 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address3 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q3 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address4 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q4 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address5 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q5 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address6 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q6 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_table_address7 : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_q7 : STD_LOGIC_VECTOR (16 downto 0);
    signal invert_table_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_q0 : STD_LOGIC_VECTOR (17 downto 0);
    signal layer15_out_blk_n : STD_LOGIC;
    signal layer16_out_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal data_array_fu_646_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_reg_2168 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_fu_650_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_1_reg_2174 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_fu_660_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_2_reg_2180 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_fu_670_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_3_reg_2186 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_fu_680_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_4_reg_2192 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_fu_690_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_5_reg_2198 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_fu_700_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_6_reg_2204 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_fu_710_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_7_reg_2210 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_8_reg_2216 : STD_LOGIC_VECTOR (15 downto 0);
    signal data_array_9_reg_2223 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln65_fu_740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_reg_2230 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_1_fu_746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_1_reg_2235 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_3_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_3_reg_2240 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_4_fu_758_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_4_reg_2245 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_2_fu_798_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_2_reg_2250 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal select_ln65_5_fu_840_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_5_reg_2256 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_fu_858_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_6_reg_2262 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln65_7_fu_864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_7_reg_2268 : STD_LOGIC_VECTOR (0 downto 0);
    signal x_max_fu_890_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal x_max_reg_2273 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln215_1_fu_1348_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_1_reg_2278 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal select_ln215_3_fu_1374_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_3_reg_2283 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_5_fu_1400_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_5_reg_2288 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_7_fu_1426_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_7_reg_2293 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_9_fu_1452_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_9_reg_2298 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_11_fu_1478_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_11_reg_2303 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_13_fu_1504_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_13_reg_2308 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_15_fu_1530_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_15_reg_2313 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_17_fu_1556_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_17_reg_2318 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_19_fu_1582_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln215_19_reg_2323 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal exp_res_reg_2368 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal exp_res_1_reg_2375 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_2_reg_2382 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_3_reg_2389 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_4_reg_2396 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_5_reg_2403 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_6_reg_2410 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_7_reg_2417 : STD_LOGIC_VECTOR (16 downto 0);
    signal exp_res_8_reg_2434 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal exp_res_9_reg_2441 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln50_7_fu_1702_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_7_reg_2448 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_31_reg_2453 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_10_fu_1788_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_10_reg_2458 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_35_reg_2463 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln50_1_fu_1882_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln50_1_reg_2468 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal select_ln50_10_fu_1908_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_10_reg_2474 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_5_fu_1988_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln50_5_reg_2480 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal inv_exp_sum_reg_2490 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal sext_ln244_fu_2000_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln_reg_2559 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln244_1_reg_2564 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_2_reg_2569 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_3_reg_2574 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_4_reg_2579 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_5_reg_2584 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_6_reg_2589 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_7_reg_2594 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_8_reg_2599 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln244_9_reg_2604 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln225_fu_1590_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_1_fu_1594_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_2_fu_1598_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_3_fu_1602_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_4_fu_1606_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_5_fu_1610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_6_fu_1614_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_7_fu_1618_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_8_fu_1622_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln225_9_fu_1626_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln235_fu_1996_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal layer15_out_read_local : STD_LOGIC;
    signal exp_table_ce7_local : STD_LOGIC;
    signal exp_table_ce6_local : STD_LOGIC;
    signal exp_table_ce5_local : STD_LOGIC;
    signal exp_table_ce4_local : STD_LOGIC;
    signal exp_table_ce3_local : STD_LOGIC;
    signal exp_table_ce2_local : STD_LOGIC;
    signal exp_table_ce1_local : STD_LOGIC;
    signal exp_table_address1_local : STD_LOGIC_VECTOR (9 downto 0);
    signal exp_table_ce0_local : STD_LOGIC;
    signal exp_table_address0_local : STD_LOGIC_VECTOR (9 downto 0);
    signal invert_table_ce0_local : STD_LOGIC;
    signal grp_fu_275_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_275_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_276_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_276_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_277_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_277_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_278_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_278_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_279_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_279_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_280_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_280_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_281_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_281_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_282_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_282_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_283_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_283_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_284_p0 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_284_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal xor_ln65_fu_764_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_1_fu_775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_fu_769_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_1_fu_780_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln65_2_fu_786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_2_fu_792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_3_fu_806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_4_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_3_fu_811_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal select_ln65_4_fu_822_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln65_5_fu_828_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_5_fu_834_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln65_6_fu_848_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_6_fu_852_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_7_fu_868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln65_7_fu_873_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln65_8_fu_879_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln65_8_fu_884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_900_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal conv36_i_fu_897_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_fu_903_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_909_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_917_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_fu_925_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_1_fu_943_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_1_fu_946_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_952_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_fu_960_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_2_fu_968_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_2_fu_986_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_2_fu_989_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_4_fu_995_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_1003_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_4_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_3_fu_1029_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_3_fu_1032_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_6_fu_1038_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_1046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_6_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_4_fu_1072_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_4_fu_1075_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_8_fu_1081_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_9_fu_1089_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_8_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_5_fu_1115_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_5_fu_1118_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_10_fu_1124_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1132_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_10_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_6_fu_1158_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_6_fu_1161_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_12_fu_1167_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_1175_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_12_fu_1183_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_7_fu_1201_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_7_fu_1204_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_14_fu_1210_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_14_fu_1226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_8_fu_1244_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_8_fu_1247_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_16_fu_1253_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1261_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_16_fu_1269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_9_fu_1287_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln215_9_fu_1290_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_18_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_1304_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_18_fu_1312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln215_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_1_fu_937_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_fu_1330_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_s_fu_1338_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_1_fu_974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_3_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_2_fu_1356_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_20_fu_1364_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_2_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_5_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_4_fu_1382_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_21_fu_1390_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_3_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_7_fu_1066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_6_fu_1408_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_22_fu_1416_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_4_fu_1103_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_9_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_8_fu_1434_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_23_fu_1442_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_5_fu_1146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_11_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_10_fu_1460_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_24_fu_1468_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_6_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_13_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_12_fu_1486_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_25_fu_1494_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_7_fu_1232_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_15_fu_1238_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_14_fu_1512_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_26_fu_1520_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_8_fu_1275_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_17_fu_1281_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_16_fu_1538_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_27_fu_1546_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal and_ln215_9_fu_1318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln215_19_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln215_18_fu_1564_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_28_fu_1572_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln50_fu_1633_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_fu_1630_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_5_fu_1640_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_29_fu_1646_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_11_fu_1636_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_2_fu_1654_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln50_1_fu_1669_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_2_fu_1666_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_6_fu_1676_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_30_fu_1682_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_12_fu_1672_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_3_fu_1690_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln50_2_fu_1698_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_1_fu_1662_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln50_3_fu_1719_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_3_fu_1716_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_8_fu_1726_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_32_fu_1732_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_13_fu_1722_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_7_fu_1740_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln50_4_fu_1755_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_5_fu_1752_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_9_fu_1762_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_33_fu_1768_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_14_fu_1758_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln50_8_fu_1776_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln50_5_fu_1784_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln43_4_fu_1748_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln50_6_fu_1808_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln50_9_fu_1814_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln50_1_fu_1824_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln50_fu_1820_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln50_1_fu_1834_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln50_fu_1828_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_36_fu_1840_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_fu_1848_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln50_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln50_1_fu_1868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln50_fu_1874_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_9_cast16_fu_1805_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal exp_res_8_cast15_fu_1802_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln50_2_fu_1894_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_38_fu_1900_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln50_15_fu_1890_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln50_6_fu_1916_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln50_7_fu_1922_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln50_2_fu_1919_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln50_4_fu_1930_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal add_ln50_3_fu_1925_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_39_fu_1936_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1944_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln50_2_fu_1952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln50_1_fu_1958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln50_3_fu_1964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln50_4_fu_1970_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_34_fu_1978_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_275_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_282_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_276_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_279_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_277_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_281_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_278_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_280_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_283_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_284_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal grp_fu_275_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_276_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_277_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_278_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_279_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_280_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_281_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_282_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_283_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_284_p10 : STD_LOGIC_VECTOR (25 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component myproject_mul_18s_17ns_26_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (17 downto 0);
        din1 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (25 downto 0) );
    end component;


    component myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_exp_tabbjl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address1 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce2 : IN STD_LOGIC;
        q2 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address3 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce3 : IN STD_LOGIC;
        q3 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address4 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce4 : IN STD_LOGIC;
        q4 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address5 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce5 : IN STD_LOGIC;
        q5 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address6 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce6 : IN STD_LOGIC;
        q6 : OUT STD_LOGIC_VECTOR (16 downto 0);
        address7 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce7 : IN STD_LOGIC;
        q7 : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_invert_bkl IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    exp_table_U : component myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_exp_tabbjl
    generic map (
        DataWidth => 17,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => exp_table_address0_local,
        ce0 => exp_table_ce0_local,
        q0 => exp_table_q0,
        address1 => exp_table_address1_local,
        ce1 => exp_table_ce1_local,
        q1 => exp_table_q1,
        address2 => exp_table_address2,
        ce2 => exp_table_ce2_local,
        q2 => exp_table_q2,
        address3 => exp_table_address3,
        ce3 => exp_table_ce3_local,
        q3 => exp_table_q3,
        address4 => exp_table_address4,
        ce4 => exp_table_ce4_local,
        q4 => exp_table_q4,
        address5 => exp_table_address5,
        ce5 => exp_table_ce5_local,
        q5 => exp_table_q5,
        address6 => exp_table_address6,
        ce6 => exp_table_ce6_local,
        q6 => exp_table_q6,
        address7 => exp_table_address7,
        ce7 => exp_table_ce7_local,
        q7 => exp_table_q7);

    invert_table_U : component myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_invert_bkl
    generic map (
        DataWidth => 18,
        AddressRange => 1024,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => invert_table_address0,
        ce0 => invert_table_ce0_local,
        q0 => invert_table_q0);

    mul_18s_17ns_26_2_1_U3629 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_275_p0,
        din1 => grp_fu_275_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_275_p2);

    mul_18s_17ns_26_2_1_U3630 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_276_p0,
        din1 => grp_fu_276_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_276_p2);

    mul_18s_17ns_26_2_1_U3631 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_277_p0,
        din1 => grp_fu_277_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_277_p2);

    mul_18s_17ns_26_2_1_U3632 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_278_p0,
        din1 => grp_fu_278_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_278_p2);

    mul_18s_17ns_26_2_1_U3633 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_279_p0,
        din1 => grp_fu_279_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_279_p2);

    mul_18s_17ns_26_2_1_U3634 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_280_p0,
        din1 => grp_fu_280_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_280_p2);

    mul_18s_17ns_26_2_1_U3635 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_281_p0,
        din1 => grp_fu_281_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_281_p2);

    mul_18s_17ns_26_2_1_U3636 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_282_p0,
        din1 => grp_fu_282_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_282_p2);

    mul_18s_17ns_26_2_1_U3637 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_283_p0,
        din1 => grp_fu_283_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_283_p2);

    mul_18s_17ns_26_2_1_U3638 : component myproject_mul_18s_17ns_26_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 18,
        din1_WIDTH => 17,
        dout_WIDTH => 26)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_284_p0,
        din1 => grp_fu_284_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_284_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                add_ln50_10_reg_2458 <= add_ln50_10_fu_1788_p2;
                add_ln50_7_reg_2448 <= add_ln50_7_fu_1702_p2;
                exp_res_8_reg_2434 <= exp_table_q1;
                exp_res_9_reg_2441 <= exp_table_q0;
                tmp_31_reg_2453 <= add_ln50_7_fu_1702_p2(17 downto 17);
                tmp_35_reg_2463 <= add_ln50_10_fu_1788_p2(17 downto 17);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                data_array_1_reg_2174 <= layer15_out_dout(31 downto 16);
                data_array_2_reg_2180 <= layer15_out_dout(47 downto 32);
                data_array_3_reg_2186 <= layer15_out_dout(63 downto 48);
                data_array_4_reg_2192 <= layer15_out_dout(79 downto 64);
                data_array_5_reg_2198 <= layer15_out_dout(95 downto 80);
                data_array_6_reg_2204 <= layer15_out_dout(111 downto 96);
                data_array_7_reg_2210 <= layer15_out_dout(127 downto 112);
                data_array_8_reg_2216 <= layer15_out_dout(143 downto 128);
                data_array_9_reg_2223 <= layer15_out_dout(159 downto 144);
                data_array_reg_2168 <= data_array_fu_646_p1;
                icmp_ln65_1_reg_2235 <= icmp_ln65_1_fu_746_p2;
                icmp_ln65_3_reg_2240 <= icmp_ln65_3_fu_752_p2;
                icmp_ln65_4_reg_2245 <= icmp_ln65_4_fu_758_p2;
                icmp_ln65_reg_2230 <= icmp_ln65_fu_740_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                exp_res_1_reg_2375 <= exp_table_q6;
                exp_res_2_reg_2382 <= exp_table_q5;
                exp_res_3_reg_2389 <= exp_table_q4;
                exp_res_4_reg_2396 <= exp_table_q3;
                exp_res_5_reg_2403 <= exp_table_q2;
                exp_res_6_reg_2410 <= exp_table_q1;
                exp_res_7_reg_2417 <= exp_table_q0;
                exp_res_reg_2368 <= exp_table_q7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                icmp_ln65_7_reg_2268 <= icmp_ln65_7_fu_864_p2;
                select_ln65_6_reg_2262 <= select_ln65_6_fu_858_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                inv_exp_sum_reg_2490 <= invert_table_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                select_ln215_11_reg_2303 <= select_ln215_11_fu_1478_p3;
                select_ln215_13_reg_2308 <= select_ln215_13_fu_1504_p3;
                select_ln215_15_reg_2313 <= select_ln215_15_fu_1530_p3;
                select_ln215_17_reg_2318 <= select_ln215_17_fu_1556_p3;
                select_ln215_19_reg_2323 <= select_ln215_19_fu_1582_p3;
                select_ln215_1_reg_2278 <= select_ln215_1_fu_1348_p3;
                select_ln215_3_reg_2283 <= select_ln215_3_fu_1374_p3;
                select_ln215_5_reg_2288 <= select_ln215_5_fu_1400_p3;
                select_ln215_7_reg_2293 <= select_ln215_7_fu_1426_p3;
                select_ln215_9_reg_2298 <= select_ln215_9_fu_1452_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                select_ln50_10_reg_2474 <= select_ln50_10_fu_1908_p3;
                select_ln50_1_reg_2468 <= select_ln50_1_fu_1882_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                select_ln50_5_reg_2480 <= select_ln50_5_fu_1988_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                select_ln65_2_reg_2250 <= select_ln65_2_fu_798_p3;
                select_ln65_5_reg_2256 <= select_ln65_5_fu_840_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                trunc_ln244_1_reg_2564 <= grp_fu_282_p2(25 downto 10);
                trunc_ln244_2_reg_2569 <= grp_fu_276_p2(25 downto 10);
                trunc_ln244_3_reg_2574 <= grp_fu_279_p2(25 downto 10);
                trunc_ln244_4_reg_2579 <= grp_fu_277_p2(25 downto 10);
                trunc_ln244_5_reg_2584 <= grp_fu_281_p2(25 downto 10);
                trunc_ln244_6_reg_2589 <= grp_fu_278_p2(25 downto 10);
                trunc_ln244_7_reg_2594 <= grp_fu_280_p2(25 downto 10);
                trunc_ln244_8_reg_2599 <= grp_fu_283_p2(25 downto 10);
                trunc_ln244_9_reg_2604 <= grp_fu_284_p2(25 downto 10);
                trunc_ln_reg_2559 <= grp_fu_275_p2(25 downto 10);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                x_max_reg_2273 <= x_max_fu_890_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, layer16_out_TREADY, ap_CS_fsm_state15, ap_block_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((layer16_out_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln50_10_fu_1788_p2 <= std_logic_vector(unsigned(zext_ln50_5_fu_1784_p1) + unsigned(zext_ln43_4_fu_1748_p1));
    add_ln50_11_fu_1636_p2 <= std_logic_vector(unsigned(exp_res_1_reg_2375) + unsigned(exp_res_reg_2368));
    add_ln50_12_fu_1672_p2 <= std_logic_vector(unsigned(exp_res_3_reg_2389) + unsigned(exp_res_2_reg_2382));
    add_ln50_13_fu_1722_p2 <= std_logic_vector(unsigned(exp_res_5_reg_2403) + unsigned(exp_res_4_reg_2396));
    add_ln50_14_fu_1758_p2 <= std_logic_vector(unsigned(exp_res_7_reg_2417) + unsigned(exp_res_6_reg_2410));
    add_ln50_15_fu_1890_p2 <= std_logic_vector(unsigned(exp_res_9_reg_2441) + unsigned(exp_res_8_reg_2434));
    add_ln50_1_fu_1834_p2 <= std_logic_vector(signed(sext_ln50_1_fu_1824_p1) + signed(sext_ln50_fu_1820_p1));
    add_ln50_2_fu_1894_p2 <= std_logic_vector(unsigned(exp_res_9_cast16_fu_1805_p1) + unsigned(exp_res_8_cast15_fu_1802_p1));
    add_ln50_3_fu_1925_p2 <= std_logic_vector(unsigned(zext_ln50_6_fu_1916_p1) + unsigned(select_ln50_1_reg_2468));
    add_ln50_4_fu_1930_p2 <= std_logic_vector(unsigned(zext_ln50_7_fu_1922_p1) + unsigned(sext_ln50_2_fu_1919_p1));
    add_ln50_5_fu_1640_p2 <= std_logic_vector(unsigned(zext_ln50_fu_1633_p1) + unsigned(zext_ln43_fu_1630_p1));
    add_ln50_6_fu_1676_p2 <= std_logic_vector(unsigned(zext_ln50_1_fu_1669_p1) + unsigned(zext_ln43_2_fu_1666_p1));
    add_ln50_7_fu_1702_p2 <= std_logic_vector(unsigned(zext_ln50_2_fu_1698_p1) + unsigned(zext_ln43_1_fu_1662_p1));
    add_ln50_8_fu_1726_p2 <= std_logic_vector(unsigned(zext_ln50_3_fu_1719_p1) + unsigned(zext_ln43_3_fu_1716_p1));
    add_ln50_9_fu_1762_p2 <= std_logic_vector(unsigned(zext_ln50_4_fu_1755_p1) + unsigned(zext_ln43_5_fu_1752_p1));
    add_ln50_fu_1828_p2 <= std_logic_vector(signed(select_ln50_9_fu_1814_p3) + signed(select_ln50_6_fu_1808_p3));
    and_ln215_1_fu_974_p2 <= (xor_ln215_2_fu_968_p2 and tmp_3_fu_960_p3);
    and_ln215_2_fu_1017_p2 <= (xor_ln215_4_fu_1011_p2 and tmp_5_fu_1003_p3);
    and_ln215_3_fu_1060_p2 <= (xor_ln215_6_fu_1054_p2 and tmp_7_fu_1046_p3);
    and_ln215_4_fu_1103_p2 <= (xor_ln215_8_fu_1097_p2 and tmp_9_fu_1089_p3);
    and_ln215_5_fu_1146_p2 <= (xor_ln215_10_fu_1140_p2 and tmp_11_fu_1132_p3);
    and_ln215_6_fu_1189_p2 <= (xor_ln215_12_fu_1183_p2 and tmp_13_fu_1175_p3);
    and_ln215_7_fu_1232_p2 <= (xor_ln215_14_fu_1226_p2 and tmp_15_fu_1218_p3);
    and_ln215_8_fu_1275_p2 <= (xor_ln215_16_fu_1269_p2 and tmp_17_fu_1261_p3);
    and_ln215_9_fu_1318_p2 <= (xor_ln215_18_fu_1312_p2 and tmp_19_fu_1304_p3);
    and_ln215_fu_931_p2 <= (xor_ln215_fu_925_p2 and tmp_1_fu_917_p3);
    and_ln50_1_fu_1958_p2 <= (xor_ln50_2_fu_1952_p2 and tmp_40_fu_1944_p3);
    and_ln50_fu_1862_p2 <= (xor_ln50_fu_1856_p2 and tmp_37_fu_1848_p3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;

    ap_ST_fsm_state15_blk_assign_proc : process(layer16_out_TREADY)
    begin
        if ((layer16_out_TREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state15_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state15_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, layer15_out_empty_n)
    begin
                ap_block_state1 <= ((layer15_out_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state16)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

        conv36_i_fu_897_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(x_max_reg_2273),17));

    data_array_1_fu_650_p4 <= layer15_out_dout(31 downto 16);
    data_array_2_fu_660_p4 <= layer15_out_dout(47 downto 32);
    data_array_3_fu_670_p4 <= layer15_out_dout(63 downto 48);
    data_array_4_fu_680_p4 <= layer15_out_dout(79 downto 64);
    data_array_5_fu_690_p4 <= layer15_out_dout(95 downto 80);
    data_array_6_fu_700_p4 <= layer15_out_dout(111 downto 96);
    data_array_7_fu_710_p4 <= layer15_out_dout(127 downto 112);
    data_array_fu_646_p1 <= layer15_out_dout(16 - 1 downto 0);
    exp_res_8_cast15_fu_1802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_reg_2434),18));
    exp_res_9_cast16_fu_1805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_reg_2441),18));

    exp_table_address0_local_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, zext_ln225_7_fu_1618_p1, zext_ln225_9_fu_1626_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            exp_table_address0_local <= zext_ln225_9_fu_1626_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_address0_local <= zext_ln225_7_fu_1618_p1(10 - 1 downto 0);
        else 
            exp_table_address0_local <= "XXXXXXXXXX";
        end if; 
    end process;


    exp_table_address1_local_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7, zext_ln225_6_fu_1614_p1, zext_ln225_8_fu_1622_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            exp_table_address1_local <= zext_ln225_8_fu_1622_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_address1_local <= zext_ln225_6_fu_1614_p1(10 - 1 downto 0);
        else 
            exp_table_address1_local <= "XXXXXXXXXX";
        end if; 
    end process;

    exp_table_address2 <= zext_ln225_5_fu_1610_p1(10 - 1 downto 0);
    exp_table_address3 <= zext_ln225_4_fu_1606_p1(10 - 1 downto 0);
    exp_table_address4 <= zext_ln225_3_fu_1602_p1(10 - 1 downto 0);
    exp_table_address5 <= zext_ln225_2_fu_1598_p1(10 - 1 downto 0);
    exp_table_address6 <= zext_ln225_1_fu_1594_p1(10 - 1 downto 0);
    exp_table_address7 <= zext_ln225_fu_1590_p1(10 - 1 downto 0);

    exp_table_ce0_local_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            exp_table_ce0_local <= ap_const_logic_1;
        else 
            exp_table_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce1_local_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            exp_table_ce1_local <= ap_const_logic_1;
        else 
            exp_table_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce2_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce2_local <= ap_const_logic_1;
        else 
            exp_table_ce2_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce3_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce3_local <= ap_const_logic_1;
        else 
            exp_table_ce3_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce4_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce4_local <= ap_const_logic_1;
        else 
            exp_table_ce4_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce5_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce5_local <= ap_const_logic_1;
        else 
            exp_table_ce5_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce6_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce6_local <= ap_const_logic_1;
        else 
            exp_table_ce6_local <= ap_const_logic_0;
        end if; 
    end process;


    exp_table_ce7_local_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            exp_table_ce7_local <= ap_const_logic_1;
        else 
            exp_table_ce7_local <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_275_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_275_p1 <= grp_fu_275_p10(17 - 1 downto 0);
    grp_fu_275_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_reg_2368),26));
    grp_fu_276_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_276_p1 <= grp_fu_276_p10(17 - 1 downto 0);
    grp_fu_276_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_reg_2382),26));
    grp_fu_277_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_277_p1 <= grp_fu_277_p10(17 - 1 downto 0);
    grp_fu_277_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_reg_2396),26));
    grp_fu_278_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_278_p1 <= grp_fu_278_p10(17 - 1 downto 0);
    grp_fu_278_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_reg_2410),26));
    grp_fu_279_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_279_p1 <= grp_fu_279_p10(17 - 1 downto 0);
    grp_fu_279_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_reg_2389),26));
    grp_fu_280_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_280_p1 <= grp_fu_280_p10(17 - 1 downto 0);
    grp_fu_280_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_reg_2417),26));
    grp_fu_281_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_281_p1 <= grp_fu_281_p10(17 - 1 downto 0);
    grp_fu_281_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_reg_2403),26));
    grp_fu_282_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_282_p1 <= grp_fu_282_p10(17 - 1 downto 0);
    grp_fu_282_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_reg_2375),26));
    grp_fu_283_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_283_p1 <= grp_fu_283_p10(17 - 1 downto 0);
    grp_fu_283_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_8_reg_2434),26));
    grp_fu_284_p0 <= sext_ln244_fu_2000_p1(18 - 1 downto 0);
    grp_fu_284_p1 <= grp_fu_284_p10(17 - 1 downto 0);
    grp_fu_284_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_9_reg_2441),26));
    icmp_ln65_1_fu_746_p2 <= "1" when (signed(data_array_2_fu_660_p4) < signed(data_array_3_fu_670_p4)) else "0";
    icmp_ln65_2_fu_786_p2 <= "1" when (signed(select_ln65_fu_769_p3) < signed(select_ln65_1_fu_780_p3)) else "0";
    icmp_ln65_3_fu_752_p2 <= "1" when (signed(data_array_4_fu_680_p4) < signed(data_array_5_fu_690_p4)) else "0";
    icmp_ln65_4_fu_758_p2 <= "1" when (signed(data_array_6_fu_700_p4) < signed(data_array_7_fu_710_p4)) else "0";
    icmp_ln65_5_fu_828_p2 <= "1" when (signed(select_ln65_3_fu_811_p3) < signed(select_ln65_4_fu_822_p3)) else "0";
    icmp_ln65_6_fu_848_p2 <= "1" when (signed(select_ln65_2_reg_2250) < signed(select_ln65_5_reg_2256)) else "0";
    icmp_ln65_7_fu_864_p2 <= "1" when (signed(data_array_8_reg_2216) < signed(data_array_9_reg_2223)) else "0";
    icmp_ln65_8_fu_879_p2 <= "1" when (signed(select_ln65_6_reg_2262) < signed(select_ln65_7_fu_873_p3)) else "0";
    icmp_ln65_fu_740_p2 <= "1" when (signed(data_array_fu_646_p1) < signed(data_array_1_fu_650_p4)) else "0";
    invert_table_address0 <= zext_ln235_fu_1996_p1(10 - 1 downto 0);

    invert_table_ce0_local_assign_proc : process(ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            invert_table_ce0_local <= ap_const_logic_1;
        else 
            invert_table_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    layer15_out_blk_n_assign_proc : process(ap_start, ap_CS_fsm_state1, layer15_out_empty_n)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer15_out_blk_n <= layer15_out_empty_n;
        else 
            layer15_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    layer15_out_read <= layer15_out_read_local;

    layer15_out_read_local_assign_proc : process(ap_CS_fsm_state1, ap_block_state1)
    begin
        if (((ap_const_boolean_0 = ap_block_state1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            layer15_out_read_local <= ap_const_logic_1;
        else 
            layer15_out_read_local <= ap_const_logic_0;
        end if; 
    end process;

    layer16_out_TDATA <= (((((((((trunc_ln244_9_reg_2604 & trunc_ln244_8_reg_2599) & trunc_ln244_7_reg_2594) & trunc_ln244_6_reg_2589) & trunc_ln244_5_reg_2584) & trunc_ln244_4_reg_2579) & trunc_ln244_3_reg_2574) & trunc_ln244_2_reg_2569) & trunc_ln244_1_reg_2564) & trunc_ln_reg_2559);

    layer16_out_TDATA_blk_n_assign_proc : process(layer16_out_TREADY, ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            layer16_out_TDATA_blk_n <= layer16_out_TREADY;
        else 
            layer16_out_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    layer16_out_TVALID_assign_proc : process(layer16_out_TREADY, ap_CS_fsm_state15)
    begin
        if (((layer16_out_TREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            layer16_out_TVALID <= ap_const_logic_1;
        else 
            layer16_out_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    select_ln215_10_fu_1460_p3 <= 
        ap_const_lv10_1FF when (and_ln215_5_fu_1146_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_11_fu_1478_p3 <= 
        select_ln215_10_fu_1460_p3 when (xor_ln215_11_fu_1152_p2(0) = '1') else 
        tmp_24_fu_1468_p4;
    select_ln215_12_fu_1486_p3 <= 
        ap_const_lv10_1FF when (and_ln215_6_fu_1189_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_13_fu_1504_p3 <= 
        select_ln215_12_fu_1486_p3 when (xor_ln215_13_fu_1195_p2(0) = '1') else 
        tmp_25_fu_1494_p4;
    select_ln215_14_fu_1512_p3 <= 
        ap_const_lv10_1FF when (and_ln215_7_fu_1232_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_15_fu_1530_p3 <= 
        select_ln215_14_fu_1512_p3 when (xor_ln215_15_fu_1238_p2(0) = '1') else 
        tmp_26_fu_1520_p4;
    select_ln215_16_fu_1538_p3 <= 
        ap_const_lv10_1FF when (and_ln215_8_fu_1275_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_17_fu_1556_p3 <= 
        select_ln215_16_fu_1538_p3 when (xor_ln215_17_fu_1281_p2(0) = '1') else 
        tmp_27_fu_1546_p4;
    select_ln215_18_fu_1564_p3 <= 
        ap_const_lv10_1FF when (and_ln215_9_fu_1318_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_19_fu_1582_p3 <= 
        select_ln215_18_fu_1564_p3 when (xor_ln215_19_fu_1324_p2(0) = '1') else 
        tmp_28_fu_1572_p4;
    select_ln215_1_fu_1348_p3 <= 
        select_ln215_fu_1330_p3 when (xor_ln215_1_fu_937_p2(0) = '1') else 
        tmp_s_fu_1338_p4;
    select_ln215_2_fu_1356_p3 <= 
        ap_const_lv10_1FF when (and_ln215_1_fu_974_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_3_fu_1374_p3 <= 
        select_ln215_2_fu_1356_p3 when (xor_ln215_3_fu_980_p2(0) = '1') else 
        tmp_20_fu_1364_p4;
    select_ln215_4_fu_1382_p3 <= 
        ap_const_lv10_1FF when (and_ln215_2_fu_1017_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_5_fu_1400_p3 <= 
        select_ln215_4_fu_1382_p3 when (xor_ln215_5_fu_1023_p2(0) = '1') else 
        tmp_21_fu_1390_p4;
    select_ln215_6_fu_1408_p3 <= 
        ap_const_lv10_1FF when (and_ln215_3_fu_1060_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_7_fu_1426_p3 <= 
        select_ln215_6_fu_1408_p3 when (xor_ln215_7_fu_1066_p2(0) = '1') else 
        tmp_22_fu_1416_p4;
    select_ln215_8_fu_1434_p3 <= 
        ap_const_lv10_1FF when (and_ln215_4_fu_1103_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln215_9_fu_1452_p3 <= 
        select_ln215_8_fu_1434_p3 when (xor_ln215_9_fu_1109_p2(0) = '1') else 
        tmp_23_fu_1442_p4;
    select_ln215_fu_1330_p3 <= 
        ap_const_lv10_1FF when (and_ln215_fu_931_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln50_10_fu_1908_p3 <= 
        ap_const_lv17_1FFFF when (tmp_38_fu_1900_p3(0) = '1') else 
        add_ln50_15_fu_1890_p2;
    select_ln50_1_fu_1882_p3 <= 
        select_ln50_fu_1874_p3 when (xor_ln50_1_fu_1868_p2(0) = '1') else 
        add_ln50_fu_1828_p2;
    select_ln50_2_fu_1654_p3 <= 
        ap_const_lv17_1FFFF when (tmp_29_fu_1646_p3(0) = '1') else 
        add_ln50_11_fu_1636_p2;
    select_ln50_3_fu_1690_p3 <= 
        ap_const_lv17_1FFFF when (tmp_30_fu_1682_p3(0) = '1') else 
        add_ln50_12_fu_1672_p2;
    select_ln50_4_fu_1970_p3 <= 
        ap_const_lv10_1FF when (and_ln50_1_fu_1958_p2(0) = '1') else 
        ap_const_lv10_200;
    select_ln50_5_fu_1988_p3 <= 
        select_ln50_4_fu_1970_p3 when (xor_ln50_3_fu_1964_p2(0) = '1') else 
        tmp_34_fu_1978_p4;
    select_ln50_6_fu_1808_p3 <= 
        ap_const_lv18_1FFFF when (tmp_31_reg_2453(0) = '1') else 
        add_ln50_7_reg_2448;
    select_ln50_7_fu_1740_p3 <= 
        ap_const_lv17_1FFFF when (tmp_32_fu_1732_p3(0) = '1') else 
        add_ln50_13_fu_1722_p2;
    select_ln50_8_fu_1776_p3 <= 
        ap_const_lv17_1FFFF when (tmp_33_fu_1768_p3(0) = '1') else 
        add_ln50_14_fu_1758_p2;
    select_ln50_9_fu_1814_p3 <= 
        ap_const_lv18_1FFFF when (tmp_35_reg_2463(0) = '1') else 
        add_ln50_10_reg_2458;
    select_ln50_fu_1874_p3 <= 
        ap_const_lv18_1FFFF when (and_ln50_fu_1862_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln65_1_fu_780_p3 <= 
        data_array_2_reg_2180 when (xor_ln65_1_fu_775_p2(0) = '1') else 
        data_array_3_reg_2186;
    select_ln65_2_fu_798_p3 <= 
        select_ln65_fu_769_p3 when (xor_ln65_2_fu_792_p2(0) = '1') else 
        select_ln65_1_fu_780_p3;
    select_ln65_3_fu_811_p3 <= 
        data_array_4_reg_2192 when (xor_ln65_3_fu_806_p2(0) = '1') else 
        data_array_5_reg_2198;
    select_ln65_4_fu_822_p3 <= 
        data_array_6_reg_2204 when (xor_ln65_4_fu_817_p2(0) = '1') else 
        data_array_7_reg_2210;
    select_ln65_5_fu_840_p3 <= 
        select_ln65_3_fu_811_p3 when (xor_ln65_5_fu_834_p2(0) = '1') else 
        select_ln65_4_fu_822_p3;
    select_ln65_6_fu_858_p3 <= 
        select_ln65_2_reg_2250 when (xor_ln65_6_fu_852_p2(0) = '1') else 
        select_ln65_5_reg_2256;
    select_ln65_7_fu_873_p3 <= 
        data_array_8_reg_2216 when (xor_ln65_7_fu_868_p2(0) = '1') else 
        data_array_9_reg_2223;
    select_ln65_fu_769_p3 <= 
        data_array_reg_2168 when (xor_ln65_fu_764_p2(0) = '1') else 
        data_array_1_reg_2174;
        sext_ln215_1_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_1_reg_2174),17));

        sext_ln215_2_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_2_reg_2180),17));

        sext_ln215_3_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_3_reg_2186),17));

        sext_ln215_4_fu_1072_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_4_reg_2192),17));

        sext_ln215_5_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_5_reg_2198),17));

        sext_ln215_6_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_6_reg_2204),17));

        sext_ln215_7_fu_1201_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_7_reg_2210),17));

        sext_ln215_8_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_8_reg_2216),17));

        sext_ln215_9_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_9_reg_2223),17));

        sext_ln215_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(data_array_reg_2168),17));

        sext_ln244_fu_2000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(inv_exp_sum_reg_2490),26));

        sext_ln50_1_fu_1824_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln50_9_fu_1814_p3),19));

        sext_ln50_2_fu_1919_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln50_1_reg_2468),19));

        sext_ln50_fu_1820_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln50_6_fu_1808_p3),19));

    sub_ln215_1_fu_946_p2 <= std_logic_vector(signed(sext_ln215_1_fu_943_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_2_fu_989_p2 <= std_logic_vector(signed(sext_ln215_2_fu_986_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_3_fu_1032_p2 <= std_logic_vector(signed(sext_ln215_3_fu_1029_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_4_fu_1075_p2 <= std_logic_vector(signed(sext_ln215_4_fu_1072_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_5_fu_1118_p2 <= std_logic_vector(signed(sext_ln215_5_fu_1115_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_6_fu_1161_p2 <= std_logic_vector(signed(sext_ln215_6_fu_1158_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_7_fu_1204_p2 <= std_logic_vector(signed(sext_ln215_7_fu_1201_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_8_fu_1247_p2 <= std_logic_vector(signed(sext_ln215_8_fu_1244_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_9_fu_1290_p2 <= std_logic_vector(signed(sext_ln215_9_fu_1287_p1) - signed(conv36_i_fu_897_p1));
    sub_ln215_fu_903_p2 <= std_logic_vector(signed(sext_ln215_fu_900_p1) - signed(conv36_i_fu_897_p1));
    tmp_10_fu_1124_p3 <= sub_ln215_5_fu_1118_p2(16 downto 16);
    tmp_11_fu_1132_p3 <= sub_ln215_5_fu_1118_p2(15 downto 15);
    tmp_12_fu_1167_p3 <= sub_ln215_6_fu_1161_p2(16 downto 16);
    tmp_13_fu_1175_p3 <= sub_ln215_6_fu_1161_p2(15 downto 15);
    tmp_14_fu_1210_p3 <= sub_ln215_7_fu_1204_p2(16 downto 16);
    tmp_15_fu_1218_p3 <= sub_ln215_7_fu_1204_p2(15 downto 15);
    tmp_16_fu_1253_p3 <= sub_ln215_8_fu_1247_p2(16 downto 16);
    tmp_17_fu_1261_p3 <= sub_ln215_8_fu_1247_p2(15 downto 15);
    tmp_18_fu_1296_p3 <= sub_ln215_9_fu_1290_p2(16 downto 16);
    tmp_19_fu_1304_p3 <= sub_ln215_9_fu_1290_p2(15 downto 15);
    tmp_1_fu_917_p3 <= sub_ln215_fu_903_p2(15 downto 15);
    tmp_20_fu_1364_p4 <= sub_ln215_1_fu_946_p2(15 downto 6);
    tmp_21_fu_1390_p4 <= sub_ln215_2_fu_989_p2(15 downto 6);
    tmp_22_fu_1416_p4 <= sub_ln215_3_fu_1032_p2(15 downto 6);
    tmp_23_fu_1442_p4 <= sub_ln215_4_fu_1075_p2(15 downto 6);
    tmp_24_fu_1468_p4 <= sub_ln215_5_fu_1118_p2(15 downto 6);
    tmp_25_fu_1494_p4 <= sub_ln215_6_fu_1161_p2(15 downto 6);
    tmp_26_fu_1520_p4 <= sub_ln215_7_fu_1204_p2(15 downto 6);
    tmp_27_fu_1546_p4 <= sub_ln215_8_fu_1247_p2(15 downto 6);
    tmp_28_fu_1572_p4 <= sub_ln215_9_fu_1290_p2(15 downto 6);
    tmp_29_fu_1646_p3 <= add_ln50_5_fu_1640_p2(17 downto 17);
    tmp_2_fu_952_p3 <= sub_ln215_1_fu_946_p2(16 downto 16);
    tmp_30_fu_1682_p3 <= add_ln50_6_fu_1676_p2(17 downto 17);
    tmp_32_fu_1732_p3 <= add_ln50_8_fu_1726_p2(17 downto 17);
    tmp_33_fu_1768_p3 <= add_ln50_9_fu_1762_p2(17 downto 17);
    tmp_34_fu_1978_p4 <= add_ln50_3_fu_1925_p2(17 downto 8);
    tmp_36_fu_1840_p3 <= add_ln50_1_fu_1834_p2(18 downto 18);
    tmp_37_fu_1848_p3 <= add_ln50_fu_1828_p2(17 downto 17);
    tmp_38_fu_1900_p3 <= add_ln50_2_fu_1894_p2(17 downto 17);
    tmp_39_fu_1936_p3 <= add_ln50_4_fu_1930_p2(18 downto 18);
    tmp_3_fu_960_p3 <= sub_ln215_1_fu_946_p2(15 downto 15);
    tmp_40_fu_1944_p3 <= add_ln50_3_fu_1925_p2(17 downto 17);
    tmp_4_fu_995_p3 <= sub_ln215_2_fu_989_p2(16 downto 16);
    tmp_5_fu_1003_p3 <= sub_ln215_2_fu_989_p2(15 downto 15);
    tmp_6_fu_1038_p3 <= sub_ln215_3_fu_1032_p2(16 downto 16);
    tmp_7_fu_1046_p3 <= sub_ln215_3_fu_1032_p2(15 downto 15);
    tmp_8_fu_1081_p3 <= sub_ln215_4_fu_1075_p2(16 downto 16);
    tmp_9_fu_1089_p3 <= sub_ln215_4_fu_1075_p2(15 downto 15);
    tmp_fu_909_p3 <= sub_ln215_fu_903_p2(16 downto 16);
    tmp_s_fu_1338_p4 <= sub_ln215_fu_903_p2(15 downto 6);
    x_max_fu_890_p3 <= 
        select_ln65_6_reg_2262 when (xor_ln65_8_fu_884_p2(0) = '1') else 
        select_ln65_7_fu_873_p3;
    xor_ln215_10_fu_1140_p2 <= (tmp_10_fu_1124_p3 xor ap_const_lv1_1);
    xor_ln215_11_fu_1152_p2 <= (tmp_11_fu_1132_p3 xor tmp_10_fu_1124_p3);
    xor_ln215_12_fu_1183_p2 <= (tmp_12_fu_1167_p3 xor ap_const_lv1_1);
    xor_ln215_13_fu_1195_p2 <= (tmp_13_fu_1175_p3 xor tmp_12_fu_1167_p3);
    xor_ln215_14_fu_1226_p2 <= (tmp_14_fu_1210_p3 xor ap_const_lv1_1);
    xor_ln215_15_fu_1238_p2 <= (tmp_15_fu_1218_p3 xor tmp_14_fu_1210_p3);
    xor_ln215_16_fu_1269_p2 <= (tmp_16_fu_1253_p3 xor ap_const_lv1_1);
    xor_ln215_17_fu_1281_p2 <= (tmp_17_fu_1261_p3 xor tmp_16_fu_1253_p3);
    xor_ln215_18_fu_1312_p2 <= (tmp_18_fu_1296_p3 xor ap_const_lv1_1);
    xor_ln215_19_fu_1324_p2 <= (tmp_19_fu_1304_p3 xor tmp_18_fu_1296_p3);
    xor_ln215_1_fu_937_p2 <= (tmp_fu_909_p3 xor tmp_1_fu_917_p3);
    xor_ln215_2_fu_968_p2 <= (tmp_2_fu_952_p3 xor ap_const_lv1_1);
    xor_ln215_3_fu_980_p2 <= (tmp_3_fu_960_p3 xor tmp_2_fu_952_p3);
    xor_ln215_4_fu_1011_p2 <= (tmp_4_fu_995_p3 xor ap_const_lv1_1);
    xor_ln215_5_fu_1023_p2 <= (tmp_5_fu_1003_p3 xor tmp_4_fu_995_p3);
    xor_ln215_6_fu_1054_p2 <= (tmp_6_fu_1038_p3 xor ap_const_lv1_1);
    xor_ln215_7_fu_1066_p2 <= (tmp_7_fu_1046_p3 xor tmp_6_fu_1038_p3);
    xor_ln215_8_fu_1097_p2 <= (tmp_8_fu_1081_p3 xor ap_const_lv1_1);
    xor_ln215_9_fu_1109_p2 <= (tmp_9_fu_1089_p3 xor tmp_8_fu_1081_p3);
    xor_ln215_fu_925_p2 <= (tmp_fu_909_p3 xor ap_const_lv1_1);
    xor_ln50_1_fu_1868_p2 <= (tmp_37_fu_1848_p3 xor tmp_36_fu_1840_p3);
    xor_ln50_2_fu_1952_p2 <= (tmp_39_fu_1936_p3 xor ap_const_lv1_1);
    xor_ln50_3_fu_1964_p2 <= (tmp_40_fu_1944_p3 xor tmp_39_fu_1936_p3);
    xor_ln50_fu_1856_p2 <= (tmp_36_fu_1840_p3 xor ap_const_lv1_1);
    xor_ln65_1_fu_775_p2 <= (icmp_ln65_1_reg_2235 xor ap_const_lv1_1);
    xor_ln65_2_fu_792_p2 <= (icmp_ln65_2_fu_786_p2 xor ap_const_lv1_1);
    xor_ln65_3_fu_806_p2 <= (icmp_ln65_3_reg_2240 xor ap_const_lv1_1);
    xor_ln65_4_fu_817_p2 <= (icmp_ln65_4_reg_2245 xor ap_const_lv1_1);
    xor_ln65_5_fu_834_p2 <= (icmp_ln65_5_fu_828_p2 xor ap_const_lv1_1);
    xor_ln65_6_fu_852_p2 <= (icmp_ln65_6_fu_848_p2 xor ap_const_lv1_1);
    xor_ln65_7_fu_868_p2 <= (icmp_ln65_7_reg_2268 xor ap_const_lv1_1);
    xor_ln65_8_fu_884_p2 <= (icmp_ln65_8_fu_879_p2 xor ap_const_lv1_1);
    xor_ln65_fu_764_p2 <= (icmp_ln65_reg_2230 xor ap_const_lv1_1);
    zext_ln225_1_fu_1594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_3_reg_2283),64));
    zext_ln225_2_fu_1598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_5_reg_2288),64));
    zext_ln225_3_fu_1602_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_7_reg_2293),64));
    zext_ln225_4_fu_1606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_9_reg_2298),64));
    zext_ln225_5_fu_1610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_11_reg_2303),64));
    zext_ln225_6_fu_1614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_13_reg_2308),64));
    zext_ln225_7_fu_1618_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_15_reg_2313),64));
    zext_ln225_8_fu_1622_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_17_reg_2318),64));
    zext_ln225_9_fu_1626_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_19_reg_2323),64));
    zext_ln225_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln215_1_reg_2278),64));
    zext_ln235_fu_1996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_5_reg_2480),64));
    zext_ln43_1_fu_1662_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_2_fu_1654_p3),18));
    zext_ln43_2_fu_1666_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_2_reg_2382),18));
    zext_ln43_3_fu_1716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_4_reg_2396),18));
    zext_ln43_4_fu_1748_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_7_fu_1740_p3),18));
    zext_ln43_5_fu_1752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_6_reg_2410),18));
    zext_ln43_fu_1630_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_reg_2368),18));
    zext_ln50_1_fu_1669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_3_reg_2389),18));
    zext_ln50_2_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_3_fu_1690_p3),18));
    zext_ln50_3_fu_1719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_5_reg_2403),18));
    zext_ln50_4_fu_1755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_7_reg_2417),18));
    zext_ln50_5_fu_1784_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_8_fu_1776_p3),18));
    zext_ln50_6_fu_1916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_10_reg_2474),18));
    zext_ln50_7_fu_1922_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln50_10_reg_2474),19));
    zext_ln50_fu_1633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(exp_res_1_reg_2375),18));
end behav;
