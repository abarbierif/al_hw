// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        layer15_out_dout,
        layer15_out_num_data_valid,
        layer15_out_fifo_cap,
        layer15_out_empty_n,
        layer15_out_read,
        layer16_out_TDATA,
        layer16_out_TVALID,
        layer16_out_TREADY
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_state3 = 16'd4;
parameter    ap_ST_fsm_state4 = 16'd8;
parameter    ap_ST_fsm_state5 = 16'd16;
parameter    ap_ST_fsm_state6 = 16'd32;
parameter    ap_ST_fsm_state7 = 16'd64;
parameter    ap_ST_fsm_state8 = 16'd128;
parameter    ap_ST_fsm_state9 = 16'd256;
parameter    ap_ST_fsm_state10 = 16'd512;
parameter    ap_ST_fsm_state11 = 16'd1024;
parameter    ap_ST_fsm_state12 = 16'd2048;
parameter    ap_ST_fsm_state13 = 16'd4096;
parameter    ap_ST_fsm_state14 = 16'd8192;
parameter    ap_ST_fsm_state15 = 16'd16384;
parameter    ap_ST_fsm_state16 = 16'd32768;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [159:0] layer15_out_dout;
input  [1:0] layer15_out_num_data_valid;
input  [1:0] layer15_out_fifo_cap;
input   layer15_out_empty_n;
output   layer15_out_read;
output  [159:0] layer16_out_TDATA;
output   layer16_out_TVALID;
input   layer16_out_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg layer16_out_TVALID;

(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [16:0] exp_table_q0;
wire   [16:0] exp_table_q1;
wire   [9:0] exp_table_address2;
wire   [16:0] exp_table_q2;
wire   [9:0] exp_table_address3;
wire   [16:0] exp_table_q3;
wire   [9:0] exp_table_address4;
wire   [16:0] exp_table_q4;
wire   [9:0] exp_table_address5;
wire   [16:0] exp_table_q5;
wire   [9:0] exp_table_address6;
wire   [16:0] exp_table_q6;
wire   [9:0] exp_table_address7;
wire   [16:0] exp_table_q7;
wire   [9:0] invert_table_address0;
wire   [17:0] invert_table_q0;
reg    layer15_out_blk_n;
reg    layer16_out_TDATA_blk_n;
wire    ap_CS_fsm_state15;
wire  signed [15:0] data_array_fu_646_p1;
reg  signed [15:0] data_array_reg_2168;
wire  signed [15:0] data_array_1_fu_650_p4;
reg  signed [15:0] data_array_1_reg_2174;
wire  signed [15:0] data_array_2_fu_660_p4;
reg  signed [15:0] data_array_2_reg_2180;
wire  signed [15:0] data_array_3_fu_670_p4;
reg  signed [15:0] data_array_3_reg_2186;
wire  signed [15:0] data_array_4_fu_680_p4;
reg  signed [15:0] data_array_4_reg_2192;
wire  signed [15:0] data_array_5_fu_690_p4;
reg  signed [15:0] data_array_5_reg_2198;
wire  signed [15:0] data_array_6_fu_700_p4;
reg  signed [15:0] data_array_6_reg_2204;
wire  signed [15:0] data_array_7_fu_710_p4;
reg  signed [15:0] data_array_7_reg_2210;
reg  signed [15:0] data_array_8_reg_2216;
reg  signed [15:0] data_array_9_reg_2223;
wire   [0:0] icmp_ln65_fu_740_p2;
reg   [0:0] icmp_ln65_reg_2230;
wire   [0:0] icmp_ln65_1_fu_746_p2;
reg   [0:0] icmp_ln65_1_reg_2235;
wire   [0:0] icmp_ln65_3_fu_752_p2;
reg   [0:0] icmp_ln65_3_reg_2240;
wire   [0:0] icmp_ln65_4_fu_758_p2;
reg   [0:0] icmp_ln65_4_reg_2245;
wire   [15:0] select_ln65_2_fu_798_p3;
reg   [15:0] select_ln65_2_reg_2250;
wire    ap_CS_fsm_state2;
wire   [15:0] select_ln65_5_fu_840_p3;
reg   [15:0] select_ln65_5_reg_2256;
wire   [15:0] select_ln65_6_fu_858_p3;
reg   [15:0] select_ln65_6_reg_2262;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln65_7_fu_864_p2;
reg   [0:0] icmp_ln65_7_reg_2268;
wire   [15:0] x_max_fu_890_p3;
reg   [15:0] x_max_reg_2273;
wire    ap_CS_fsm_state4;
wire   [9:0] select_ln215_1_fu_1348_p3;
reg   [9:0] select_ln215_1_reg_2278;
wire    ap_CS_fsm_state5;
wire   [9:0] select_ln215_3_fu_1374_p3;
reg   [9:0] select_ln215_3_reg_2283;
wire   [9:0] select_ln215_5_fu_1400_p3;
reg   [9:0] select_ln215_5_reg_2288;
wire   [9:0] select_ln215_7_fu_1426_p3;
reg   [9:0] select_ln215_7_reg_2293;
wire   [9:0] select_ln215_9_fu_1452_p3;
reg   [9:0] select_ln215_9_reg_2298;
wire   [9:0] select_ln215_11_fu_1478_p3;
reg   [9:0] select_ln215_11_reg_2303;
wire   [9:0] select_ln215_13_fu_1504_p3;
reg   [9:0] select_ln215_13_reg_2308;
wire   [9:0] select_ln215_15_fu_1530_p3;
reg   [9:0] select_ln215_15_reg_2313;
wire   [9:0] select_ln215_17_fu_1556_p3;
reg   [9:0] select_ln215_17_reg_2318;
wire   [9:0] select_ln215_19_fu_1582_p3;
reg   [9:0] select_ln215_19_reg_2323;
wire    ap_CS_fsm_state6;
reg   [16:0] exp_res_reg_2368;
wire    ap_CS_fsm_state7;
reg   [16:0] exp_res_1_reg_2375;
reg   [16:0] exp_res_2_reg_2382;
reg   [16:0] exp_res_3_reg_2389;
reg   [16:0] exp_res_4_reg_2396;
reg   [16:0] exp_res_5_reg_2403;
reg   [16:0] exp_res_6_reg_2410;
reg   [16:0] exp_res_7_reg_2417;
reg   [16:0] exp_res_8_reg_2434;
wire    ap_CS_fsm_state8;
reg   [16:0] exp_res_9_reg_2441;
wire   [17:0] add_ln50_7_fu_1702_p2;
reg   [17:0] add_ln50_7_reg_2448;
reg   [0:0] tmp_31_reg_2453;
wire   [17:0] add_ln50_10_fu_1788_p2;
reg   [17:0] add_ln50_10_reg_2458;
reg   [0:0] tmp_35_reg_2463;
wire  signed [17:0] select_ln50_1_fu_1882_p3;
reg  signed [17:0] select_ln50_1_reg_2468;
wire    ap_CS_fsm_state9;
wire   [16:0] select_ln50_10_fu_1908_p3;
reg   [16:0] select_ln50_10_reg_2474;
wire   [9:0] select_ln50_5_fu_1988_p3;
reg   [9:0] select_ln50_5_reg_2480;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
reg   [17:0] inv_exp_sum_reg_2490;
wire    ap_CS_fsm_state12;
wire  signed [25:0] sext_ln244_fu_2000_p1;
wire    ap_CS_fsm_state13;
reg   [15:0] trunc_ln_reg_2559;
wire    ap_CS_fsm_state14;
reg   [15:0] trunc_ln244_1_reg_2564;
reg   [15:0] trunc_ln244_2_reg_2569;
reg   [15:0] trunc_ln244_3_reg_2574;
reg   [15:0] trunc_ln244_4_reg_2579;
reg   [15:0] trunc_ln244_5_reg_2584;
reg   [15:0] trunc_ln244_6_reg_2589;
reg   [15:0] trunc_ln244_7_reg_2594;
reg   [15:0] trunc_ln244_8_reg_2599;
reg   [15:0] trunc_ln244_9_reg_2604;
wire   [63:0] zext_ln225_fu_1590_p1;
wire   [63:0] zext_ln225_1_fu_1594_p1;
wire   [63:0] zext_ln225_2_fu_1598_p1;
wire   [63:0] zext_ln225_3_fu_1602_p1;
wire   [63:0] zext_ln225_4_fu_1606_p1;
wire   [63:0] zext_ln225_5_fu_1610_p1;
wire   [63:0] zext_ln225_6_fu_1614_p1;
wire   [63:0] zext_ln225_7_fu_1618_p1;
wire   [63:0] zext_ln225_8_fu_1622_p1;
wire   [63:0] zext_ln225_9_fu_1626_p1;
wire   [63:0] zext_ln235_fu_1996_p1;
reg    ap_block_state1;
reg    layer15_out_read_local;
reg    exp_table_ce7_local;
reg    exp_table_ce6_local;
reg    exp_table_ce5_local;
reg    exp_table_ce4_local;
reg    exp_table_ce3_local;
reg    exp_table_ce2_local;
reg    exp_table_ce1_local;
reg   [9:0] exp_table_address1_local;
reg    exp_table_ce0_local;
reg   [9:0] exp_table_address0_local;
reg    invert_table_ce0_local;
wire  signed [17:0] grp_fu_275_p0;
wire   [16:0] grp_fu_275_p1;
wire  signed [17:0] grp_fu_276_p0;
wire   [16:0] grp_fu_276_p1;
wire  signed [17:0] grp_fu_277_p0;
wire   [16:0] grp_fu_277_p1;
wire  signed [17:0] grp_fu_278_p0;
wire   [16:0] grp_fu_278_p1;
wire  signed [17:0] grp_fu_279_p0;
wire   [16:0] grp_fu_279_p1;
wire  signed [17:0] grp_fu_280_p0;
wire   [16:0] grp_fu_280_p1;
wire  signed [17:0] grp_fu_281_p0;
wire   [16:0] grp_fu_281_p1;
wire  signed [17:0] grp_fu_282_p0;
wire   [16:0] grp_fu_282_p1;
wire  signed [17:0] grp_fu_283_p0;
wire   [16:0] grp_fu_283_p1;
wire  signed [17:0] grp_fu_284_p0;
wire   [16:0] grp_fu_284_p1;
wire   [0:0] xor_ln65_fu_764_p2;
wire   [0:0] xor_ln65_1_fu_775_p2;
wire   [15:0] select_ln65_fu_769_p3;
wire   [15:0] select_ln65_1_fu_780_p3;
wire   [0:0] icmp_ln65_2_fu_786_p2;
wire   [0:0] xor_ln65_2_fu_792_p2;
wire   [0:0] xor_ln65_3_fu_806_p2;
wire   [0:0] xor_ln65_4_fu_817_p2;
wire   [15:0] select_ln65_3_fu_811_p3;
wire   [15:0] select_ln65_4_fu_822_p3;
wire   [0:0] icmp_ln65_5_fu_828_p2;
wire   [0:0] xor_ln65_5_fu_834_p2;
wire   [0:0] icmp_ln65_6_fu_848_p2;
wire   [0:0] xor_ln65_6_fu_852_p2;
wire   [0:0] xor_ln65_7_fu_868_p2;
wire   [15:0] select_ln65_7_fu_873_p3;
wire   [0:0] icmp_ln65_8_fu_879_p2;
wire   [0:0] xor_ln65_8_fu_884_p2;
wire  signed [16:0] sext_ln215_fu_900_p1;
wire  signed [16:0] conv36_i_fu_897_p1;
wire   [16:0] sub_ln215_fu_903_p2;
wire   [0:0] tmp_fu_909_p3;
wire   [0:0] tmp_1_fu_917_p3;
wire   [0:0] xor_ln215_fu_925_p2;
wire  signed [16:0] sext_ln215_1_fu_943_p1;
wire   [16:0] sub_ln215_1_fu_946_p2;
wire   [0:0] tmp_2_fu_952_p3;
wire   [0:0] tmp_3_fu_960_p3;
wire   [0:0] xor_ln215_2_fu_968_p2;
wire  signed [16:0] sext_ln215_2_fu_986_p1;
wire   [16:0] sub_ln215_2_fu_989_p2;
wire   [0:0] tmp_4_fu_995_p3;
wire   [0:0] tmp_5_fu_1003_p3;
wire   [0:0] xor_ln215_4_fu_1011_p2;
wire  signed [16:0] sext_ln215_3_fu_1029_p1;
wire   [16:0] sub_ln215_3_fu_1032_p2;
wire   [0:0] tmp_6_fu_1038_p3;
wire   [0:0] tmp_7_fu_1046_p3;
wire   [0:0] xor_ln215_6_fu_1054_p2;
wire  signed [16:0] sext_ln215_4_fu_1072_p1;
wire   [16:0] sub_ln215_4_fu_1075_p2;
wire   [0:0] tmp_8_fu_1081_p3;
wire   [0:0] tmp_9_fu_1089_p3;
wire   [0:0] xor_ln215_8_fu_1097_p2;
wire  signed [16:0] sext_ln215_5_fu_1115_p1;
wire   [16:0] sub_ln215_5_fu_1118_p2;
wire   [0:0] tmp_10_fu_1124_p3;
wire   [0:0] tmp_11_fu_1132_p3;
wire   [0:0] xor_ln215_10_fu_1140_p2;
wire  signed [16:0] sext_ln215_6_fu_1158_p1;
wire   [16:0] sub_ln215_6_fu_1161_p2;
wire   [0:0] tmp_12_fu_1167_p3;
wire   [0:0] tmp_13_fu_1175_p3;
wire   [0:0] xor_ln215_12_fu_1183_p2;
wire  signed [16:0] sext_ln215_7_fu_1201_p1;
wire   [16:0] sub_ln215_7_fu_1204_p2;
wire   [0:0] tmp_14_fu_1210_p3;
wire   [0:0] tmp_15_fu_1218_p3;
wire   [0:0] xor_ln215_14_fu_1226_p2;
wire  signed [16:0] sext_ln215_8_fu_1244_p1;
wire   [16:0] sub_ln215_8_fu_1247_p2;
wire   [0:0] tmp_16_fu_1253_p3;
wire   [0:0] tmp_17_fu_1261_p3;
wire   [0:0] xor_ln215_16_fu_1269_p2;
wire  signed [16:0] sext_ln215_9_fu_1287_p1;
wire   [16:0] sub_ln215_9_fu_1290_p2;
wire   [0:0] tmp_18_fu_1296_p3;
wire   [0:0] tmp_19_fu_1304_p3;
wire   [0:0] xor_ln215_18_fu_1312_p2;
wire   [0:0] and_ln215_fu_931_p2;
wire   [0:0] xor_ln215_1_fu_937_p2;
wire   [9:0] select_ln215_fu_1330_p3;
wire   [9:0] tmp_s_fu_1338_p4;
wire   [0:0] and_ln215_1_fu_974_p2;
wire   [0:0] xor_ln215_3_fu_980_p2;
wire   [9:0] select_ln215_2_fu_1356_p3;
wire   [9:0] tmp_20_fu_1364_p4;
wire   [0:0] and_ln215_2_fu_1017_p2;
wire   [0:0] xor_ln215_5_fu_1023_p2;
wire   [9:0] select_ln215_4_fu_1382_p3;
wire   [9:0] tmp_21_fu_1390_p4;
wire   [0:0] and_ln215_3_fu_1060_p2;
wire   [0:0] xor_ln215_7_fu_1066_p2;
wire   [9:0] select_ln215_6_fu_1408_p3;
wire   [9:0] tmp_22_fu_1416_p4;
wire   [0:0] and_ln215_4_fu_1103_p2;
wire   [0:0] xor_ln215_9_fu_1109_p2;
wire   [9:0] select_ln215_8_fu_1434_p3;
wire   [9:0] tmp_23_fu_1442_p4;
wire   [0:0] and_ln215_5_fu_1146_p2;
wire   [0:0] xor_ln215_11_fu_1152_p2;
wire   [9:0] select_ln215_10_fu_1460_p3;
wire   [9:0] tmp_24_fu_1468_p4;
wire   [0:0] and_ln215_6_fu_1189_p2;
wire   [0:0] xor_ln215_13_fu_1195_p2;
wire   [9:0] select_ln215_12_fu_1486_p3;
wire   [9:0] tmp_25_fu_1494_p4;
wire   [0:0] and_ln215_7_fu_1232_p2;
wire   [0:0] xor_ln215_15_fu_1238_p2;
wire   [9:0] select_ln215_14_fu_1512_p3;
wire   [9:0] tmp_26_fu_1520_p4;
wire   [0:0] and_ln215_8_fu_1275_p2;
wire   [0:0] xor_ln215_17_fu_1281_p2;
wire   [9:0] select_ln215_16_fu_1538_p3;
wire   [9:0] tmp_27_fu_1546_p4;
wire   [0:0] and_ln215_9_fu_1318_p2;
wire   [0:0] xor_ln215_19_fu_1324_p2;
wire   [9:0] select_ln215_18_fu_1564_p3;
wire   [9:0] tmp_28_fu_1572_p4;
wire   [17:0] zext_ln50_fu_1633_p1;
wire   [17:0] zext_ln43_fu_1630_p1;
wire   [17:0] add_ln50_5_fu_1640_p2;
wire   [0:0] tmp_29_fu_1646_p3;
wire   [16:0] add_ln50_11_fu_1636_p2;
wire   [16:0] select_ln50_2_fu_1654_p3;
wire   [17:0] zext_ln50_1_fu_1669_p1;
wire   [17:0] zext_ln43_2_fu_1666_p1;
wire   [17:0] add_ln50_6_fu_1676_p2;
wire   [0:0] tmp_30_fu_1682_p3;
wire   [16:0] add_ln50_12_fu_1672_p2;
wire   [16:0] select_ln50_3_fu_1690_p3;
wire   [17:0] zext_ln50_2_fu_1698_p1;
wire   [17:0] zext_ln43_1_fu_1662_p1;
wire   [17:0] zext_ln50_3_fu_1719_p1;
wire   [17:0] zext_ln43_3_fu_1716_p1;
wire   [17:0] add_ln50_8_fu_1726_p2;
wire   [0:0] tmp_32_fu_1732_p3;
wire   [16:0] add_ln50_13_fu_1722_p2;
wire   [16:0] select_ln50_7_fu_1740_p3;
wire   [17:0] zext_ln50_4_fu_1755_p1;
wire   [17:0] zext_ln43_5_fu_1752_p1;
wire   [17:0] add_ln50_9_fu_1762_p2;
wire   [0:0] tmp_33_fu_1768_p3;
wire   [16:0] add_ln50_14_fu_1758_p2;
wire   [16:0] select_ln50_8_fu_1776_p3;
wire   [17:0] zext_ln50_5_fu_1784_p1;
wire   [17:0] zext_ln43_4_fu_1748_p1;
wire  signed [17:0] select_ln50_6_fu_1808_p3;
wire  signed [17:0] select_ln50_9_fu_1814_p3;
wire  signed [18:0] sext_ln50_1_fu_1824_p1;
wire  signed [18:0] sext_ln50_fu_1820_p1;
wire   [18:0] add_ln50_1_fu_1834_p2;
wire   [17:0] add_ln50_fu_1828_p2;
wire   [0:0] tmp_36_fu_1840_p3;
wire   [0:0] tmp_37_fu_1848_p3;
wire   [0:0] xor_ln50_fu_1856_p2;
wire   [0:0] and_ln50_fu_1862_p2;
wire   [0:0] xor_ln50_1_fu_1868_p2;
wire   [17:0] select_ln50_fu_1874_p3;
wire   [17:0] exp_res_9_cast16_fu_1805_p1;
wire   [17:0] exp_res_8_cast15_fu_1802_p1;
wire   [17:0] add_ln50_2_fu_1894_p2;
wire   [0:0] tmp_38_fu_1900_p3;
wire   [16:0] add_ln50_15_fu_1890_p2;
wire   [17:0] zext_ln50_6_fu_1916_p1;
wire   [18:0] zext_ln50_7_fu_1922_p1;
wire  signed [18:0] sext_ln50_2_fu_1919_p1;
wire   [18:0] add_ln50_4_fu_1930_p2;
wire   [17:0] add_ln50_3_fu_1925_p2;
wire   [0:0] tmp_39_fu_1936_p3;
wire   [0:0] tmp_40_fu_1944_p3;
wire   [0:0] xor_ln50_2_fu_1952_p2;
wire   [0:0] and_ln50_1_fu_1958_p2;
wire   [0:0] xor_ln50_3_fu_1964_p2;
wire   [9:0] select_ln50_4_fu_1970_p3;
wire   [9:0] tmp_34_fu_1978_p4;
wire   [25:0] grp_fu_275_p2;
wire   [25:0] grp_fu_282_p2;
wire   [25:0] grp_fu_276_p2;
wire   [25:0] grp_fu_279_p2;
wire   [25:0] grp_fu_277_p2;
wire   [25:0] grp_fu_281_p2;
wire   [25:0] grp_fu_278_p2;
wire   [25:0] grp_fu_280_p2;
wire   [25:0] grp_fu_283_p2;
wire   [25:0] grp_fu_284_p2;
wire    ap_CS_fsm_state16;
reg   [15:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire   [25:0] grp_fu_275_p10;
wire   [25:0] grp_fu_276_p10;
wire   [25:0] grp_fu_277_p10;
wire   [25:0] grp_fu_278_p10;
wire   [25:0] grp_fu_279_p10;
wire   [25:0] grp_fu_280_p10;
wire   [25:0] grp_fu_281_p10;
wire   [25:0] grp_fu_282_p10;
wire   [25:0] grp_fu_283_p10;
wire   [25:0] grp_fu_284_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
end

myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_exp_tabbjl #(
    .DataWidth( 17 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
exp_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_table_address0_local),
    .ce0(exp_table_ce0_local),
    .q0(exp_table_q0),
    .address1(exp_table_address1_local),
    .ce1(exp_table_ce1_local),
    .q1(exp_table_q1),
    .address2(exp_table_address2),
    .ce2(exp_table_ce2_local),
    .q2(exp_table_q2),
    .address3(exp_table_address3),
    .ce3(exp_table_ce3_local),
    .q3(exp_table_q3),
    .address4(exp_table_address4),
    .ce4(exp_table_ce4_local),
    .q4(exp_table_q4),
    .address5(exp_table_address5),
    .ce5(exp_table_ce5_local),
    .q5(exp_table_q5),
    .address6(exp_table_address6),
    .ce6(exp_table_ce6_local),
    .q6(exp_table_q6),
    .address7(exp_table_address7),
    .ce7(exp_table_ce7_local),
    .q7(exp_table_q7)
);

myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s_invert_bkl #(
    .DataWidth( 18 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
invert_table_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(invert_table_address0),
    .ce0(invert_table_ce0_local),
    .q0(invert_table_q0)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3629(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_275_p0),
    .din1(grp_fu_275_p1),
    .ce(1'b1),
    .dout(grp_fu_275_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3630(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_276_p0),
    .din1(grp_fu_276_p1),
    .ce(1'b1),
    .dout(grp_fu_276_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3631(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_277_p0),
    .din1(grp_fu_277_p1),
    .ce(1'b1),
    .dout(grp_fu_277_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3632(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_278_p0),
    .din1(grp_fu_278_p1),
    .ce(1'b1),
    .dout(grp_fu_278_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3633(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_279_p0),
    .din1(grp_fu_279_p1),
    .ce(1'b1),
    .dout(grp_fu_279_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3634(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_280_p0),
    .din1(grp_fu_280_p1),
    .ce(1'b1),
    .dout(grp_fu_280_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3635(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_281_p0),
    .din1(grp_fu_281_p1),
    .ce(1'b1),
    .dout(grp_fu_281_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3636(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_282_p0),
    .din1(grp_fu_282_p1),
    .ce(1'b1),
    .dout(grp_fu_282_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3637(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_283_p0),
    .din1(grp_fu_283_p1),
    .ce(1'b1),
    .dout(grp_fu_283_p2)
);

myproject_mul_18s_17ns_26_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 17 ),
    .dout_WIDTH( 26 ))
mul_18s_17ns_26_2_1_U3638(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_284_p0),
    .din1(grp_fu_284_p1),
    .ce(1'b1),
    .dout(grp_fu_284_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln50_10_reg_2458 <= add_ln50_10_fu_1788_p2;
        add_ln50_7_reg_2448 <= add_ln50_7_fu_1702_p2;
        exp_res_8_reg_2434 <= exp_table_q1;
        exp_res_9_reg_2441 <= exp_table_q0;
        tmp_31_reg_2453 <= add_ln50_7_fu_1702_p2[32'd17];
        tmp_35_reg_2463 <= add_ln50_10_fu_1788_p2[32'd17];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        data_array_1_reg_2174 <= {{layer15_out_dout[31:16]}};
        data_array_2_reg_2180 <= {{layer15_out_dout[47:32]}};
        data_array_3_reg_2186 <= {{layer15_out_dout[63:48]}};
        data_array_4_reg_2192 <= {{layer15_out_dout[79:64]}};
        data_array_5_reg_2198 <= {{layer15_out_dout[95:80]}};
        data_array_6_reg_2204 <= {{layer15_out_dout[111:96]}};
        data_array_7_reg_2210 <= {{layer15_out_dout[127:112]}};
        data_array_8_reg_2216 <= {{layer15_out_dout[143:128]}};
        data_array_9_reg_2223 <= {{layer15_out_dout[159:144]}};
        data_array_reg_2168 <= data_array_fu_646_p1;
        icmp_ln65_1_reg_2235 <= icmp_ln65_1_fu_746_p2;
        icmp_ln65_3_reg_2240 <= icmp_ln65_3_fu_752_p2;
        icmp_ln65_4_reg_2245 <= icmp_ln65_4_fu_758_p2;
        icmp_ln65_reg_2230 <= icmp_ln65_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_res_1_reg_2375 <= exp_table_q6;
        exp_res_2_reg_2382 <= exp_table_q5;
        exp_res_3_reg_2389 <= exp_table_q4;
        exp_res_4_reg_2396 <= exp_table_q3;
        exp_res_5_reg_2403 <= exp_table_q2;
        exp_res_6_reg_2410 <= exp_table_q1;
        exp_res_7_reg_2417 <= exp_table_q0;
        exp_res_reg_2368 <= exp_table_q7;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln65_7_reg_2268 <= icmp_ln65_7_fu_864_p2;
        select_ln65_6_reg_2262 <= select_ln65_6_fu_858_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        inv_exp_sum_reg_2490 <= invert_table_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln215_11_reg_2303 <= select_ln215_11_fu_1478_p3;
        select_ln215_13_reg_2308 <= select_ln215_13_fu_1504_p3;
        select_ln215_15_reg_2313 <= select_ln215_15_fu_1530_p3;
        select_ln215_17_reg_2318 <= select_ln215_17_fu_1556_p3;
        select_ln215_19_reg_2323 <= select_ln215_19_fu_1582_p3;
        select_ln215_1_reg_2278 <= select_ln215_1_fu_1348_p3;
        select_ln215_3_reg_2283 <= select_ln215_3_fu_1374_p3;
        select_ln215_5_reg_2288 <= select_ln215_5_fu_1400_p3;
        select_ln215_7_reg_2293 <= select_ln215_7_fu_1426_p3;
        select_ln215_9_reg_2298 <= select_ln215_9_fu_1452_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        select_ln50_10_reg_2474 <= select_ln50_10_fu_1908_p3;
        select_ln50_1_reg_2468 <= select_ln50_1_fu_1882_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        select_ln50_5_reg_2480 <= select_ln50_5_fu_1988_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        select_ln65_2_reg_2250 <= select_ln65_2_fu_798_p3;
        select_ln65_5_reg_2256 <= select_ln65_5_fu_840_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        trunc_ln244_1_reg_2564 <= {{grp_fu_282_p2[25:10]}};
        trunc_ln244_2_reg_2569 <= {{grp_fu_276_p2[25:10]}};
        trunc_ln244_3_reg_2574 <= {{grp_fu_279_p2[25:10]}};
        trunc_ln244_4_reg_2579 <= {{grp_fu_277_p2[25:10]}};
        trunc_ln244_5_reg_2584 <= {{grp_fu_281_p2[25:10]}};
        trunc_ln244_6_reg_2589 <= {{grp_fu_278_p2[25:10]}};
        trunc_ln244_7_reg_2594 <= {{grp_fu_280_p2[25:10]}};
        trunc_ln244_8_reg_2599 <= {{grp_fu_283_p2[25:10]}};
        trunc_ln244_9_reg_2604 <= {{grp_fu_284_p2[25:10]}};
        trunc_ln_reg_2559 <= {{grp_fu_275_p2[25:10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x_max_reg_2273 <= x_max_fu_890_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((layer16_out_TREADY == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_table_address0_local = zext_ln225_9_fu_1626_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_address0_local = zext_ln225_7_fu_1618_p1;
    end else begin
        exp_table_address0_local = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        exp_table_address1_local = zext_ln225_8_fu_1622_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_address1_local = zext_ln225_6_fu_1614_p1;
    end else begin
        exp_table_address1_local = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        exp_table_ce0_local = 1'b1;
    end else begin
        exp_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6))) begin
        exp_table_ce1_local = 1'b1;
    end else begin
        exp_table_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce2_local = 1'b1;
    end else begin
        exp_table_ce2_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce3_local = 1'b1;
    end else begin
        exp_table_ce3_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce4_local = 1'b1;
    end else begin
        exp_table_ce4_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce5_local = 1'b1;
    end else begin
        exp_table_ce5_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce6_local = 1'b1;
    end else begin
        exp_table_ce6_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        exp_table_ce7_local = 1'b1;
    end else begin
        exp_table_ce7_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        invert_table_ce0_local = 1'b1;
    end else begin
        invert_table_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_blk_n = layer15_out_empty_n;
    end else begin
        layer15_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
        layer15_out_read_local = 1'b1;
    end else begin
        layer15_out_read_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        layer16_out_TDATA_blk_n = layer16_out_TREADY;
    end else begin
        layer16_out_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((layer16_out_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        layer16_out_TVALID = 1'b1;
    end else begin
        layer16_out_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b0 == ap_block_state1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((layer16_out_TREADY == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln50_10_fu_1788_p2 = (zext_ln50_5_fu_1784_p1 + zext_ln43_4_fu_1748_p1);

assign add_ln50_11_fu_1636_p2 = (exp_res_1_reg_2375 + exp_res_reg_2368);

assign add_ln50_12_fu_1672_p2 = (exp_res_3_reg_2389 + exp_res_2_reg_2382);

assign add_ln50_13_fu_1722_p2 = (exp_res_5_reg_2403 + exp_res_4_reg_2396);

assign add_ln50_14_fu_1758_p2 = (exp_res_7_reg_2417 + exp_res_6_reg_2410);

assign add_ln50_15_fu_1890_p2 = (exp_res_9_reg_2441 + exp_res_8_reg_2434);

assign add_ln50_1_fu_1834_p2 = ($signed(sext_ln50_1_fu_1824_p1) + $signed(sext_ln50_fu_1820_p1));

assign add_ln50_2_fu_1894_p2 = (exp_res_9_cast16_fu_1805_p1 + exp_res_8_cast15_fu_1802_p1);

assign add_ln50_3_fu_1925_p2 = ($signed(zext_ln50_6_fu_1916_p1) + $signed(select_ln50_1_reg_2468));

assign add_ln50_4_fu_1930_p2 = ($signed(zext_ln50_7_fu_1922_p1) + $signed(sext_ln50_2_fu_1919_p1));

assign add_ln50_5_fu_1640_p2 = (zext_ln50_fu_1633_p1 + zext_ln43_fu_1630_p1);

assign add_ln50_6_fu_1676_p2 = (zext_ln50_1_fu_1669_p1 + zext_ln43_2_fu_1666_p1);

assign add_ln50_7_fu_1702_p2 = (zext_ln50_2_fu_1698_p1 + zext_ln43_1_fu_1662_p1);

assign add_ln50_8_fu_1726_p2 = (zext_ln50_3_fu_1719_p1 + zext_ln43_3_fu_1716_p1);

assign add_ln50_9_fu_1762_p2 = (zext_ln50_4_fu_1755_p1 + zext_ln43_5_fu_1752_p1);

assign add_ln50_fu_1828_p2 = ($signed(select_ln50_9_fu_1814_p3) + $signed(select_ln50_6_fu_1808_p3));

assign and_ln215_1_fu_974_p2 = (xor_ln215_2_fu_968_p2 & tmp_3_fu_960_p3);

assign and_ln215_2_fu_1017_p2 = (xor_ln215_4_fu_1011_p2 & tmp_5_fu_1003_p3);

assign and_ln215_3_fu_1060_p2 = (xor_ln215_6_fu_1054_p2 & tmp_7_fu_1046_p3);

assign and_ln215_4_fu_1103_p2 = (xor_ln215_8_fu_1097_p2 & tmp_9_fu_1089_p3);

assign and_ln215_5_fu_1146_p2 = (xor_ln215_10_fu_1140_p2 & tmp_11_fu_1132_p3);

assign and_ln215_6_fu_1189_p2 = (xor_ln215_12_fu_1183_p2 & tmp_13_fu_1175_p3);

assign and_ln215_7_fu_1232_p2 = (xor_ln215_14_fu_1226_p2 & tmp_15_fu_1218_p3);

assign and_ln215_8_fu_1275_p2 = (xor_ln215_16_fu_1269_p2 & tmp_17_fu_1261_p3);

assign and_ln215_9_fu_1318_p2 = (xor_ln215_18_fu_1312_p2 & tmp_19_fu_1304_p3);

assign and_ln215_fu_931_p2 = (xor_ln215_fu_925_p2 & tmp_1_fu_917_p3);

assign and_ln50_1_fu_1958_p2 = (xor_ln50_2_fu_1952_p2 & tmp_40_fu_1944_p3);

assign and_ln50_fu_1862_p2 = (xor_ln50_fu_1856_p2 & tmp_37_fu_1848_p3);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((layer15_out_empty_n == 1'b0) | (ap_start == 1'b0));
end

assign conv36_i_fu_897_p1 = $signed(x_max_reg_2273);

assign data_array_1_fu_650_p4 = {{layer15_out_dout[31:16]}};

assign data_array_2_fu_660_p4 = {{layer15_out_dout[47:32]}};

assign data_array_3_fu_670_p4 = {{layer15_out_dout[63:48]}};

assign data_array_4_fu_680_p4 = {{layer15_out_dout[79:64]}};

assign data_array_5_fu_690_p4 = {{layer15_out_dout[95:80]}};

assign data_array_6_fu_700_p4 = {{layer15_out_dout[111:96]}};

assign data_array_7_fu_710_p4 = {{layer15_out_dout[127:112]}};

assign data_array_fu_646_p1 = layer15_out_dout[15:0];

assign exp_res_8_cast15_fu_1802_p1 = exp_res_8_reg_2434;

assign exp_res_9_cast16_fu_1805_p1 = exp_res_9_reg_2441;

assign exp_table_address2 = zext_ln225_5_fu_1610_p1;

assign exp_table_address3 = zext_ln225_4_fu_1606_p1;

assign exp_table_address4 = zext_ln225_3_fu_1602_p1;

assign exp_table_address5 = zext_ln225_2_fu_1598_p1;

assign exp_table_address6 = zext_ln225_1_fu_1594_p1;

assign exp_table_address7 = zext_ln225_fu_1590_p1;

assign grp_fu_275_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_275_p1 = grp_fu_275_p10;

assign grp_fu_275_p10 = exp_res_reg_2368;

assign grp_fu_276_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_276_p1 = grp_fu_276_p10;

assign grp_fu_276_p10 = exp_res_2_reg_2382;

assign grp_fu_277_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_277_p1 = grp_fu_277_p10;

assign grp_fu_277_p10 = exp_res_4_reg_2396;

assign grp_fu_278_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_278_p1 = grp_fu_278_p10;

assign grp_fu_278_p10 = exp_res_6_reg_2410;

assign grp_fu_279_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_279_p1 = grp_fu_279_p10;

assign grp_fu_279_p10 = exp_res_3_reg_2389;

assign grp_fu_280_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_280_p1 = grp_fu_280_p10;

assign grp_fu_280_p10 = exp_res_7_reg_2417;

assign grp_fu_281_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_281_p1 = grp_fu_281_p10;

assign grp_fu_281_p10 = exp_res_5_reg_2403;

assign grp_fu_282_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_282_p1 = grp_fu_282_p10;

assign grp_fu_282_p10 = exp_res_1_reg_2375;

assign grp_fu_283_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_283_p1 = grp_fu_283_p10;

assign grp_fu_283_p10 = exp_res_8_reg_2434;

assign grp_fu_284_p0 = sext_ln244_fu_2000_p1;

assign grp_fu_284_p1 = grp_fu_284_p10;

assign grp_fu_284_p10 = exp_res_9_reg_2441;

assign icmp_ln65_1_fu_746_p2 = (($signed(data_array_2_fu_660_p4) < $signed(data_array_3_fu_670_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_2_fu_786_p2 = (($signed(select_ln65_fu_769_p3) < $signed(select_ln65_1_fu_780_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_3_fu_752_p2 = (($signed(data_array_4_fu_680_p4) < $signed(data_array_5_fu_690_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_4_fu_758_p2 = (($signed(data_array_6_fu_700_p4) < $signed(data_array_7_fu_710_p4)) ? 1'b1 : 1'b0);

assign icmp_ln65_5_fu_828_p2 = (($signed(select_ln65_3_fu_811_p3) < $signed(select_ln65_4_fu_822_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_6_fu_848_p2 = (($signed(select_ln65_2_reg_2250) < $signed(select_ln65_5_reg_2256)) ? 1'b1 : 1'b0);

assign icmp_ln65_7_fu_864_p2 = (($signed(data_array_8_reg_2216) < $signed(data_array_9_reg_2223)) ? 1'b1 : 1'b0);

assign icmp_ln65_8_fu_879_p2 = (($signed(select_ln65_6_reg_2262) < $signed(select_ln65_7_fu_873_p3)) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_740_p2 = (($signed(data_array_fu_646_p1) < $signed(data_array_1_fu_650_p4)) ? 1'b1 : 1'b0);

assign invert_table_address0 = zext_ln235_fu_1996_p1;

assign layer15_out_read = layer15_out_read_local;

assign layer16_out_TDATA = {{{{{{{{{{trunc_ln244_9_reg_2604}, {trunc_ln244_8_reg_2599}}, {trunc_ln244_7_reg_2594}}, {trunc_ln244_6_reg_2589}}, {trunc_ln244_5_reg_2584}}, {trunc_ln244_4_reg_2579}}, {trunc_ln244_3_reg_2574}}, {trunc_ln244_2_reg_2569}}, {trunc_ln244_1_reg_2564}}, {trunc_ln_reg_2559}};

assign select_ln215_10_fu_1460_p3 = ((and_ln215_5_fu_1146_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_11_fu_1478_p3 = ((xor_ln215_11_fu_1152_p2[0:0] == 1'b1) ? select_ln215_10_fu_1460_p3 : tmp_24_fu_1468_p4);

assign select_ln215_12_fu_1486_p3 = ((and_ln215_6_fu_1189_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_13_fu_1504_p3 = ((xor_ln215_13_fu_1195_p2[0:0] == 1'b1) ? select_ln215_12_fu_1486_p3 : tmp_25_fu_1494_p4);

assign select_ln215_14_fu_1512_p3 = ((and_ln215_7_fu_1232_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_15_fu_1530_p3 = ((xor_ln215_15_fu_1238_p2[0:0] == 1'b1) ? select_ln215_14_fu_1512_p3 : tmp_26_fu_1520_p4);

assign select_ln215_16_fu_1538_p3 = ((and_ln215_8_fu_1275_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_17_fu_1556_p3 = ((xor_ln215_17_fu_1281_p2[0:0] == 1'b1) ? select_ln215_16_fu_1538_p3 : tmp_27_fu_1546_p4);

assign select_ln215_18_fu_1564_p3 = ((and_ln215_9_fu_1318_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_19_fu_1582_p3 = ((xor_ln215_19_fu_1324_p2[0:0] == 1'b1) ? select_ln215_18_fu_1564_p3 : tmp_28_fu_1572_p4);

assign select_ln215_1_fu_1348_p3 = ((xor_ln215_1_fu_937_p2[0:0] == 1'b1) ? select_ln215_fu_1330_p3 : tmp_s_fu_1338_p4);

assign select_ln215_2_fu_1356_p3 = ((and_ln215_1_fu_974_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_3_fu_1374_p3 = ((xor_ln215_3_fu_980_p2[0:0] == 1'b1) ? select_ln215_2_fu_1356_p3 : tmp_20_fu_1364_p4);

assign select_ln215_4_fu_1382_p3 = ((and_ln215_2_fu_1017_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_5_fu_1400_p3 = ((xor_ln215_5_fu_1023_p2[0:0] == 1'b1) ? select_ln215_4_fu_1382_p3 : tmp_21_fu_1390_p4);

assign select_ln215_6_fu_1408_p3 = ((and_ln215_3_fu_1060_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_7_fu_1426_p3 = ((xor_ln215_7_fu_1066_p2[0:0] == 1'b1) ? select_ln215_6_fu_1408_p3 : tmp_22_fu_1416_p4);

assign select_ln215_8_fu_1434_p3 = ((and_ln215_4_fu_1103_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln215_9_fu_1452_p3 = ((xor_ln215_9_fu_1109_p2[0:0] == 1'b1) ? select_ln215_8_fu_1434_p3 : tmp_23_fu_1442_p4);

assign select_ln215_fu_1330_p3 = ((and_ln215_fu_931_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln50_10_fu_1908_p3 = ((tmp_38_fu_1900_p3[0:0] == 1'b1) ? 17'd131071 : add_ln50_15_fu_1890_p2);

assign select_ln50_1_fu_1882_p3 = ((xor_ln50_1_fu_1868_p2[0:0] == 1'b1) ? select_ln50_fu_1874_p3 : add_ln50_fu_1828_p2);

assign select_ln50_2_fu_1654_p3 = ((tmp_29_fu_1646_p3[0:0] == 1'b1) ? 17'd131071 : add_ln50_11_fu_1636_p2);

assign select_ln50_3_fu_1690_p3 = ((tmp_30_fu_1682_p3[0:0] == 1'b1) ? 17'd131071 : add_ln50_12_fu_1672_p2);

assign select_ln50_4_fu_1970_p3 = ((and_ln50_1_fu_1958_p2[0:0] == 1'b1) ? 10'd511 : 10'd512);

assign select_ln50_5_fu_1988_p3 = ((xor_ln50_3_fu_1964_p2[0:0] == 1'b1) ? select_ln50_4_fu_1970_p3 : tmp_34_fu_1978_p4);

assign select_ln50_6_fu_1808_p3 = ((tmp_31_reg_2453[0:0] == 1'b1) ? 18'd131071 : add_ln50_7_reg_2448);

assign select_ln50_7_fu_1740_p3 = ((tmp_32_fu_1732_p3[0:0] == 1'b1) ? 17'd131071 : add_ln50_13_fu_1722_p2);

assign select_ln50_8_fu_1776_p3 = ((tmp_33_fu_1768_p3[0:0] == 1'b1) ? 17'd131071 : add_ln50_14_fu_1758_p2);

assign select_ln50_9_fu_1814_p3 = ((tmp_35_reg_2463[0:0] == 1'b1) ? 18'd131071 : add_ln50_10_reg_2458);

assign select_ln50_fu_1874_p3 = ((and_ln50_fu_1862_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln65_1_fu_780_p3 = ((xor_ln65_1_fu_775_p2[0:0] == 1'b1) ? data_array_2_reg_2180 : data_array_3_reg_2186);

assign select_ln65_2_fu_798_p3 = ((xor_ln65_2_fu_792_p2[0:0] == 1'b1) ? select_ln65_fu_769_p3 : select_ln65_1_fu_780_p3);

assign select_ln65_3_fu_811_p3 = ((xor_ln65_3_fu_806_p2[0:0] == 1'b1) ? data_array_4_reg_2192 : data_array_5_reg_2198);

assign select_ln65_4_fu_822_p3 = ((xor_ln65_4_fu_817_p2[0:0] == 1'b1) ? data_array_6_reg_2204 : data_array_7_reg_2210);

assign select_ln65_5_fu_840_p3 = ((xor_ln65_5_fu_834_p2[0:0] == 1'b1) ? select_ln65_3_fu_811_p3 : select_ln65_4_fu_822_p3);

assign select_ln65_6_fu_858_p3 = ((xor_ln65_6_fu_852_p2[0:0] == 1'b1) ? select_ln65_2_reg_2250 : select_ln65_5_reg_2256);

assign select_ln65_7_fu_873_p3 = ((xor_ln65_7_fu_868_p2[0:0] == 1'b1) ? data_array_8_reg_2216 : data_array_9_reg_2223);

assign select_ln65_fu_769_p3 = ((xor_ln65_fu_764_p2[0:0] == 1'b1) ? data_array_reg_2168 : data_array_1_reg_2174);

assign sext_ln215_1_fu_943_p1 = data_array_1_reg_2174;

assign sext_ln215_2_fu_986_p1 = data_array_2_reg_2180;

assign sext_ln215_3_fu_1029_p1 = data_array_3_reg_2186;

assign sext_ln215_4_fu_1072_p1 = data_array_4_reg_2192;

assign sext_ln215_5_fu_1115_p1 = data_array_5_reg_2198;

assign sext_ln215_6_fu_1158_p1 = data_array_6_reg_2204;

assign sext_ln215_7_fu_1201_p1 = data_array_7_reg_2210;

assign sext_ln215_8_fu_1244_p1 = data_array_8_reg_2216;

assign sext_ln215_9_fu_1287_p1 = data_array_9_reg_2223;

assign sext_ln215_fu_900_p1 = data_array_reg_2168;

assign sext_ln244_fu_2000_p1 = $signed(inv_exp_sum_reg_2490);

assign sext_ln50_1_fu_1824_p1 = select_ln50_9_fu_1814_p3;

assign sext_ln50_2_fu_1919_p1 = select_ln50_1_reg_2468;

assign sext_ln50_fu_1820_p1 = select_ln50_6_fu_1808_p3;

assign sub_ln215_1_fu_946_p2 = ($signed(sext_ln215_1_fu_943_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_2_fu_989_p2 = ($signed(sext_ln215_2_fu_986_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_3_fu_1032_p2 = ($signed(sext_ln215_3_fu_1029_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_4_fu_1075_p2 = ($signed(sext_ln215_4_fu_1072_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_5_fu_1118_p2 = ($signed(sext_ln215_5_fu_1115_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_6_fu_1161_p2 = ($signed(sext_ln215_6_fu_1158_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_7_fu_1204_p2 = ($signed(sext_ln215_7_fu_1201_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_8_fu_1247_p2 = ($signed(sext_ln215_8_fu_1244_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_9_fu_1290_p2 = ($signed(sext_ln215_9_fu_1287_p1) - $signed(conv36_i_fu_897_p1));

assign sub_ln215_fu_903_p2 = ($signed(sext_ln215_fu_900_p1) - $signed(conv36_i_fu_897_p1));

assign tmp_10_fu_1124_p3 = sub_ln215_5_fu_1118_p2[32'd16];

assign tmp_11_fu_1132_p3 = sub_ln215_5_fu_1118_p2[32'd15];

assign tmp_12_fu_1167_p3 = sub_ln215_6_fu_1161_p2[32'd16];

assign tmp_13_fu_1175_p3 = sub_ln215_6_fu_1161_p2[32'd15];

assign tmp_14_fu_1210_p3 = sub_ln215_7_fu_1204_p2[32'd16];

assign tmp_15_fu_1218_p3 = sub_ln215_7_fu_1204_p2[32'd15];

assign tmp_16_fu_1253_p3 = sub_ln215_8_fu_1247_p2[32'd16];

assign tmp_17_fu_1261_p3 = sub_ln215_8_fu_1247_p2[32'd15];

assign tmp_18_fu_1296_p3 = sub_ln215_9_fu_1290_p2[32'd16];

assign tmp_19_fu_1304_p3 = sub_ln215_9_fu_1290_p2[32'd15];

assign tmp_1_fu_917_p3 = sub_ln215_fu_903_p2[32'd15];

assign tmp_20_fu_1364_p4 = {{sub_ln215_1_fu_946_p2[15:6]}};

assign tmp_21_fu_1390_p4 = {{sub_ln215_2_fu_989_p2[15:6]}};

assign tmp_22_fu_1416_p4 = {{sub_ln215_3_fu_1032_p2[15:6]}};

assign tmp_23_fu_1442_p4 = {{sub_ln215_4_fu_1075_p2[15:6]}};

assign tmp_24_fu_1468_p4 = {{sub_ln215_5_fu_1118_p2[15:6]}};

assign tmp_25_fu_1494_p4 = {{sub_ln215_6_fu_1161_p2[15:6]}};

assign tmp_26_fu_1520_p4 = {{sub_ln215_7_fu_1204_p2[15:6]}};

assign tmp_27_fu_1546_p4 = {{sub_ln215_8_fu_1247_p2[15:6]}};

assign tmp_28_fu_1572_p4 = {{sub_ln215_9_fu_1290_p2[15:6]}};

assign tmp_29_fu_1646_p3 = add_ln50_5_fu_1640_p2[32'd17];

assign tmp_2_fu_952_p3 = sub_ln215_1_fu_946_p2[32'd16];

assign tmp_30_fu_1682_p3 = add_ln50_6_fu_1676_p2[32'd17];

assign tmp_32_fu_1732_p3 = add_ln50_8_fu_1726_p2[32'd17];

assign tmp_33_fu_1768_p3 = add_ln50_9_fu_1762_p2[32'd17];

assign tmp_34_fu_1978_p4 = {{add_ln50_3_fu_1925_p2[17:8]}};

assign tmp_36_fu_1840_p3 = add_ln50_1_fu_1834_p2[32'd18];

assign tmp_37_fu_1848_p3 = add_ln50_fu_1828_p2[32'd17];

assign tmp_38_fu_1900_p3 = add_ln50_2_fu_1894_p2[32'd17];

assign tmp_39_fu_1936_p3 = add_ln50_4_fu_1930_p2[32'd18];

assign tmp_3_fu_960_p3 = sub_ln215_1_fu_946_p2[32'd15];

assign tmp_40_fu_1944_p3 = add_ln50_3_fu_1925_p2[32'd17];

assign tmp_4_fu_995_p3 = sub_ln215_2_fu_989_p2[32'd16];

assign tmp_5_fu_1003_p3 = sub_ln215_2_fu_989_p2[32'd15];

assign tmp_6_fu_1038_p3 = sub_ln215_3_fu_1032_p2[32'd16];

assign tmp_7_fu_1046_p3 = sub_ln215_3_fu_1032_p2[32'd15];

assign tmp_8_fu_1081_p3 = sub_ln215_4_fu_1075_p2[32'd16];

assign tmp_9_fu_1089_p3 = sub_ln215_4_fu_1075_p2[32'd15];

assign tmp_fu_909_p3 = sub_ln215_fu_903_p2[32'd16];

assign tmp_s_fu_1338_p4 = {{sub_ln215_fu_903_p2[15:6]}};

assign x_max_fu_890_p3 = ((xor_ln65_8_fu_884_p2[0:0] == 1'b1) ? select_ln65_6_reg_2262 : select_ln65_7_fu_873_p3);

assign xor_ln215_10_fu_1140_p2 = (tmp_10_fu_1124_p3 ^ 1'd1);

assign xor_ln215_11_fu_1152_p2 = (tmp_11_fu_1132_p3 ^ tmp_10_fu_1124_p3);

assign xor_ln215_12_fu_1183_p2 = (tmp_12_fu_1167_p3 ^ 1'd1);

assign xor_ln215_13_fu_1195_p2 = (tmp_13_fu_1175_p3 ^ tmp_12_fu_1167_p3);

assign xor_ln215_14_fu_1226_p2 = (tmp_14_fu_1210_p3 ^ 1'd1);

assign xor_ln215_15_fu_1238_p2 = (tmp_15_fu_1218_p3 ^ tmp_14_fu_1210_p3);

assign xor_ln215_16_fu_1269_p2 = (tmp_16_fu_1253_p3 ^ 1'd1);

assign xor_ln215_17_fu_1281_p2 = (tmp_17_fu_1261_p3 ^ tmp_16_fu_1253_p3);

assign xor_ln215_18_fu_1312_p2 = (tmp_18_fu_1296_p3 ^ 1'd1);

assign xor_ln215_19_fu_1324_p2 = (tmp_19_fu_1304_p3 ^ tmp_18_fu_1296_p3);

assign xor_ln215_1_fu_937_p2 = (tmp_fu_909_p3 ^ tmp_1_fu_917_p3);

assign xor_ln215_2_fu_968_p2 = (tmp_2_fu_952_p3 ^ 1'd1);

assign xor_ln215_3_fu_980_p2 = (tmp_3_fu_960_p3 ^ tmp_2_fu_952_p3);

assign xor_ln215_4_fu_1011_p2 = (tmp_4_fu_995_p3 ^ 1'd1);

assign xor_ln215_5_fu_1023_p2 = (tmp_5_fu_1003_p3 ^ tmp_4_fu_995_p3);

assign xor_ln215_6_fu_1054_p2 = (tmp_6_fu_1038_p3 ^ 1'd1);

assign xor_ln215_7_fu_1066_p2 = (tmp_7_fu_1046_p3 ^ tmp_6_fu_1038_p3);

assign xor_ln215_8_fu_1097_p2 = (tmp_8_fu_1081_p3 ^ 1'd1);

assign xor_ln215_9_fu_1109_p2 = (tmp_9_fu_1089_p3 ^ tmp_8_fu_1081_p3);

assign xor_ln215_fu_925_p2 = (tmp_fu_909_p3 ^ 1'd1);

assign xor_ln50_1_fu_1868_p2 = (tmp_37_fu_1848_p3 ^ tmp_36_fu_1840_p3);

assign xor_ln50_2_fu_1952_p2 = (tmp_39_fu_1936_p3 ^ 1'd1);

assign xor_ln50_3_fu_1964_p2 = (tmp_40_fu_1944_p3 ^ tmp_39_fu_1936_p3);

assign xor_ln50_fu_1856_p2 = (tmp_36_fu_1840_p3 ^ 1'd1);

assign xor_ln65_1_fu_775_p2 = (icmp_ln65_1_reg_2235 ^ 1'd1);

assign xor_ln65_2_fu_792_p2 = (icmp_ln65_2_fu_786_p2 ^ 1'd1);

assign xor_ln65_3_fu_806_p2 = (icmp_ln65_3_reg_2240 ^ 1'd1);

assign xor_ln65_4_fu_817_p2 = (icmp_ln65_4_reg_2245 ^ 1'd1);

assign xor_ln65_5_fu_834_p2 = (icmp_ln65_5_fu_828_p2 ^ 1'd1);

assign xor_ln65_6_fu_852_p2 = (icmp_ln65_6_fu_848_p2 ^ 1'd1);

assign xor_ln65_7_fu_868_p2 = (icmp_ln65_7_reg_2268 ^ 1'd1);

assign xor_ln65_8_fu_884_p2 = (icmp_ln65_8_fu_879_p2 ^ 1'd1);

assign xor_ln65_fu_764_p2 = (icmp_ln65_reg_2230 ^ 1'd1);

assign zext_ln225_1_fu_1594_p1 = select_ln215_3_reg_2283;

assign zext_ln225_2_fu_1598_p1 = select_ln215_5_reg_2288;

assign zext_ln225_3_fu_1602_p1 = select_ln215_7_reg_2293;

assign zext_ln225_4_fu_1606_p1 = select_ln215_9_reg_2298;

assign zext_ln225_5_fu_1610_p1 = select_ln215_11_reg_2303;

assign zext_ln225_6_fu_1614_p1 = select_ln215_13_reg_2308;

assign zext_ln225_7_fu_1618_p1 = select_ln215_15_reg_2313;

assign zext_ln225_8_fu_1622_p1 = select_ln215_17_reg_2318;

assign zext_ln225_9_fu_1626_p1 = select_ln215_19_reg_2323;

assign zext_ln225_fu_1590_p1 = select_ln215_1_reg_2278;

assign zext_ln235_fu_1996_p1 = select_ln50_5_reg_2480;

assign zext_ln43_1_fu_1662_p1 = select_ln50_2_fu_1654_p3;

assign zext_ln43_2_fu_1666_p1 = exp_res_2_reg_2382;

assign zext_ln43_3_fu_1716_p1 = exp_res_4_reg_2396;

assign zext_ln43_4_fu_1748_p1 = select_ln50_7_fu_1740_p3;

assign zext_ln43_5_fu_1752_p1 = exp_res_6_reg_2410;

assign zext_ln43_fu_1630_p1 = exp_res_reg_2368;

assign zext_ln50_1_fu_1669_p1 = exp_res_3_reg_2389;

assign zext_ln50_2_fu_1698_p1 = select_ln50_3_fu_1690_p3;

assign zext_ln50_3_fu_1719_p1 = exp_res_5_reg_2403;

assign zext_ln50_4_fu_1755_p1 = exp_res_7_reg_2417;

assign zext_ln50_5_fu_1784_p1 = select_ln50_8_fu_1776_p3;

assign zext_ln50_6_fu_1916_p1 = select_ln50_10_reg_2474;

assign zext_ln50_7_fu_1922_p1 = select_ln50_10_reg_2474;

assign zext_ln50_fu_1633_p1 = exp_res_1_reg_2375;

endmodule //myproject_softmax_stable_array_array_ap_fixed_16_6_5_3_0_10u_softmax_config16_s
